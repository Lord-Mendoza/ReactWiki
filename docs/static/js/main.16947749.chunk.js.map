{"version":3,"sources":["components/info/FormFieldsComponentInfo.js","components/info/GridComponentInfo.js","components/info/PopUpComponentInfo.js","components/info/MaskComponentInfo.js","components/info/FileUploadComponentInfo.js","components/info/LoaderComponentInfo.js","components/info/SearchFormComponentInfo.js","utilities/constants/SearchFormCodeConstants.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["FormFieldsComponentInfo","Prism","highlightAll","className","style","textAlign","data-aos","data-aos-delay","paddingLeft","href","id","marginLeft","formFieldsSampleCode","color","fontStyle","formFieldsCode","width","formFieldsDataCode","handlerHelperCode","requiredFieldsCode","fieldContainerWidthCode","showAtPosition","Component","GridComponentInfo","props","runCodePrettify","bind","this","script","document","createElement","type","async","src","getElementsByTagName","appendChild","class","Carousel","pauseOnHover","Item","alt","Caption","listStyleType","PopUpComponentInfo","Image","paddingRight","paddingBottom","popupCodeSample","MaskComponentInfo","maskCodeSample","FileUploadComponentInfo","interval","fileUploadSampleCode","LoaderComponentInfo","loaderSampleCode","SearchFormComponentInfo","MainComponent","darkMode","copyToClipboard","e","textArea","select","execCommand","target","focus","setState","copySuccess","localStorage","getItem","state","handleSelection","setDarkModeToLocalStorage","selection","setItem","mainComponent","AOS","init","window","scrollTo","availHeight","screen","availWidth","backgroundColor","height","Navbar","sticky","collapseOnSelect","expand","bg","variant","Brand","marginBottom","marginRight","Toggle","aria-controls","Collapse","Nav","NavDropdown","title","onClick","Link","padding","checkedChildren","Icon","name","unCheckedChildren","inverted","checked","onChange","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.16947749.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css';\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\nimport Prism from \"prismjs\";\r\n\r\nclass FormFieldsComponentInfo extends Component {\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1 className=\"display-4\" style={{textAlign: \"center\"}}>Form Fields Component</h1>\r\n\r\n                    <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                        <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                            <ol>\r\n                                <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#implementation\">Sample Implementation</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#api\">Props</a></li>\r\n                            </ol>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <hr/>\r\n\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                        <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                            <p>  &#8226; You need to include the following on your package.json </p>\r\n                            <div style={{paddingLeft: 80}}>\r\n                                <samp>\r\n                                    <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;bootstrap&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;moment&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-bootstrap&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-datepicker&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-select&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-css&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-react&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p>&#125;</p>\r\n                                </samp>\r\n                            </div>\r\n\r\n                            <p>  &#8226; Then on your index.js file include: </p>\r\n                            <div style={{paddingLeft: 80}}>\r\n                                <samp> import 'bootstrap/dist/css/bootstrap.min.css'; </samp>\r\n                                <samp> import 'semantic-ui-css/semantic.min.css';</samp>\r\n                                <samp> import \"react-datepicker/dist/react-datepicker.css\"; </samp>\r\n                            </div>\r\n\r\n                            <br/>\r\n                            <p>  &#8226; Lastly, import the FormFieldsComponent for use: </p>\r\n                            <div style={{paddingLeft: 80}}>\r\n                                <samp> import FormFieldsComponent from './FormFieldsComponent' </samp>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <section id={\"implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <hr/>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Sample Implementation </h3>\r\n\r\n                        <section className={\"codeSampleImplementation\"}>\r\n                            <pre className=\"language-javascript\">\r\n                                <code>\r\n                                    {formFieldsSampleCode}\r\n                                </code>\r\n                            </pre>\r\n                        </section>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <hr/>\r\n                    <section id={\"api\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Props </h3>\r\n\r\n                        <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> formFields\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The list of form fields to be\r\n                                generated.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                <p> A JSON object whose keys are the key/id for the fields, and values are objects with\r\n                                    properties \"label\" and \"type\". They follow the given format: </p>\r\n                                <p style={{marginLeft: \"40px\"}}>&lt;<i>key/id of field</i>&gt;: &#123; label: &lt;<i>label</i>&gt;,\r\n                                    type: &lt;<i>type of field</i>&gt; &#125;</p>\r\n\r\n                                <p>The different types supported are:</p>\r\n                                <ul>\r\n                                    <li><b>\"number\"</b> = restricts input to number only</li>\r\n                                    <li><b>\"double\"</b> = restricts input to double only (&lt;number&gt;.&lt;digits\r\n                                        only&gt;); will append decimal if it is missing from the user's input.\r\n                                    </li>\r\n                                    <li><b>\"date\"</b> = shows a datepicker, and saves the selection in \"mm/dd/yyyy\"\r\n                                        format\r\n                                    </li>\r\n                                    <li><b>\"text\"</b> = allows any input</li>\r\n                                    <li><b>\"textarea\"</b> = shows a textarea that allows for any input</li>\r\n                                    <li><b>\"data\"</b> = does not render an input field; only displays data</li>\r\n                                    <li><b>\"multilineData\"</b> = same as above, but shows a button which, upon clicking,\r\n                                        opens a popup that shows the multi-line data; if value is empty, then the button\r\n                                        is not shown.\r\n                                    </li>\r\n                                    <li><b>\"currencyData\"</b> = converts a double value (not a string) to currency\r\n                                        format, along with dollar sign ($)\r\n                                    </li>\r\n                                    <li><b>&#123;dropdown: &lt;dropdown values&gt;&#125;</b> = displays a select field\r\n                                        <ul>\r\n                                            <li>dropdown values can be one of the following</li>\r\n                                            <ul>\r\n                                                <li>an array of objects in this format:</li>\r\n                                                <p style={{marginLeft: \"60px\"}}>&#123;label: &lt;label&gt;,\r\n                                                    value: &lt;value&gt;, color: &lt;color&gt;&#125;</p>\r\n                                                <li>a hook callback function that handles the asynchronous retrieval of\r\n                                                    dropdown options, and returns a &lt;Select/&gt; object\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                            <li>There are two optional properties available for added features:\r\n                                                <ul>\r\n                                                    <li><b>\"multiselect\"</b> = boolean that allows for multiple\r\n                                                        selection of values; is false by default if unspecified\r\n                                                    </li>\r\n                                                    <li><b>\"isClearable\"</b> = boolean that allows for the \"x\" symbol to\r\n                                                        appear on the select box allowing it to be clearable upon button\r\n                                                        click; is false by default\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {formFieldsCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> formFieldsData\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The current values for each form\r\n                                field.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A JSON object whose keys correspond to\r\n                                keys/ids of formFields, and values are the current values for those fields.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {formFieldsDataCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> handlerFunction\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                <p>The callback function where the user's input are passed in as they revise a field.\r\n                                    Must have the following parameters for proper flow: </p>\r\n                                <p style={{marginLeft: \"40px\"}}> (e, &#123;name, value&#125;) </p>\r\n                                <ul>\r\n                                    <li><i>name</i> corresponds to the key of the form field</li>\r\n                                    <li><i>value</i> is the user's input.</li>\r\n                                    <li>\r\n                                        <i>e</i> must be used as the source of the value if the field passed in is a\r\n                                        dropdown type.\r\n                                        You can include the following code to assist with this handling:\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {handlerHelperCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A callback function</dd>\r\n                        </dl>\r\n\r\n                        {/*====================== Additional Section ======================*/}\r\n\r\n                        <hr width={\"95%\"}/>\r\n                        <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Additional\r\n                            Customizations </h5>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> requiredFields\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Specifies which fields to add a red\r\n                                asterisk (*) after the form label to indicate a required field.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> An array of strings where each string\r\n                                corresponds to a key/id in formFields.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {requiredFieldsCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> columnCount</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                Specifies the number of columns to divide the formFields.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A number of either 2, 3, or 4.</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Default</dt>\r\n                            <dd className=\"col-sm-9\"> 2</dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\"\r\n                                style={{textAlign: \"left\", fontStyle: \"italic\"}}> fieldContainerWidth\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                Specifies the width to span the form fields by.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string that can either be some\r\n                                length unit (px, cm, etc.), percentage (%), or any CSS-supported width value.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {fieldContainerWidthCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Default</dt>\r\n                            <dd className=\"col-sm-9\"> \"fit-content\"</dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\"> Name</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> formClassName\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                                Specifies a CSS class to wrap the FormFieldsComponent by for external CSS styling.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string</dd>\r\n                        </dl>\r\n\r\n                    </section>\r\n\r\n                </div>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst formFieldsSampleCode = `<FormFieldsComponent\r\n    //Required Ones\r\n    formFields = {\r\n        name: {label: \"Name\", type: \"text\"},\r\n        dateOfBirth: {label: \"Date of Birth\", type: \"date\"},\r\n        collegeYear: {\r\n            label: \"College Year\",\r\n            type: {\r\n                dropdown: [\r\n                    {label: \"Freshman\", value: \"1\"}\r\n                    {label: \"Sophomore\", value: \"2\"}\r\n                    {label: \"Junior\", value: \"3\"}\r\n                    {label: \"Senior\", value: \"4\"}\r\n                ]\r\n            }\r\n    },\r\n    extracurricularActivities: {\r\n        label: \"Extracurricular Activities\",\r\n        type: {dropdown: <GetActivitiesOptions/>},\r\n        isClearable: true,\r\n        isMultiSelect: true\r\n    },\r\n    formFieldsData = {\r\n        name: \"John\",\r\n        dateOfBirth: \"11/19/1983\",\r\n        collegeYear: \"1\",\r\n        extracurricularActivities: [\"baseball\", \"soccer\", \"chess\"]\r\n    },\r\n    handlerFunction={this.state.handleFormFieldValue},\r\n\r\n    //Optional Ones\r\n    requiredFields = {[\"Name\", \"Date of Birth\"]},\r\n    columnCount={3},\r\n    fieldContainerWidth = {'630px'}\r\n    formClassName={'studentInfo'}\r\n/>\r\n`;\r\n\r\nconst formFieldsCode = `formFields = {\r\n    name: {label: \"Name\", type: \"text\"},\r\n    dateOfBirth: {label: \"Date of Birth\", type: \"date\"},\r\n    collegeYear: {\r\n        label: \"College Year\",\r\n        type: {\r\n            dropdown: [\r\n                {label: \"Freshman\", value: 1}\r\n                {label: \"Sophomore\", value: 2}\r\n                {label: \"Junior\", value: 3}\r\n                {label: \"Senior\", value: 4}\r\n            ]\r\n        }\r\n    }\r\n}`\r\n\r\nconst formFieldsDataCode = `formFieldsData = {\r\n    name: \"John\",\r\n    dateOfBirth: \"11/19/1983\",\r\n    collegeYear: 1,\r\n    extracurricularActivities: [\"baseball\", \"soccer\", \"chess\"]\r\n}`;\r\n\r\nconst handlerCode = `handlerFunction={this.state.handleFormFieldValue}`;\r\nconst handlerHelperCode = `let dropdownFields = Object.keys(searchFormFields).filter(field => (typeof searchFormFields[field][\"type\"] === \"object\"));\r\nif (dropdownFields.includes(name)) {\r\n    if (Array.isArray(e))\r\n        value = e;\r\n    else\r\n        value = e && e[\"value\"] ? e[\"value\"] : null;\r\n}`\r\nconst requiredFieldsCode = `requiredFields = {[\"Name\", \"Date of Birth\"]}`;\r\nconst fieldContainerWidthCode = `fieldContainerWidth = {'630px'}`\r\n\r\nexport default FormFieldsComponentInfo;","import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css'\r\nimport {Carousel} from \"react-bootstrap\";\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\n\r\nclass GridComponentInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.runCodePrettify = this.runCodePrettify.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.runCodePrettify();\r\n    }\r\n\r\n    runCodePrettify() {\r\n        let script = document.createElement('script');\r\n        script.type = 'text/javascript';\r\n        script.async = true;\r\n\r\n        script.src = 'https://cdn.rawgit.com/google/code-prettify/master/loader/run_prettify.js';\r\n        (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(script);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 class=\"display-4\" style={{textAlign: \"center\"}}>Grid Component</h1>\r\n\r\n                <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                        <ol>\r\n                            <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#configs\">Available Configurations</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#props\">Props</a></li>\r\n\r\n                            <ul>\r\n                                <li><a className=\"nav-link glossary\" href=\"#props\">Required</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#interactions\">Interacting With Data</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#displaying\">Displaying Data</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#sorting\">Sorting</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#paging\">Paging</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#styling\">Styling</a></li>\r\n                            </ul>\r\n                        </ol>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                        <p> &#8226; You need to include the following on your package.json </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp>\r\n                                <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;@devexpress/dx-react-core&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;@devexpress/dx-react-grid&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;@devexpress/dx-react-grid-bootstrap4&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;bootstrap&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;react-icons&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p>&#125;</p>\r\n                            </samp>\r\n                        </div>\r\n\r\n                        <p> &#8226; Then on your index.js file include: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import 'bootstrap/dist/css/bootstrap.min.css'; </samp>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <p> &#8226; Lastly, import the GridComponent for use: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import GridComponent from \"./GridComponent\" </samp>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"configs\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Available Configurations </h3>\r\n\r\n                    <Carousel pauseOnHover={true}>\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"./bare.png\"\r\n                                alt=\"Render for bare\"\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3><i>viewConfig</i> = \"bare\"</h3>\r\n                                <p>Displays only the grid & paging options.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"./simple.png\"\r\n                                alt=\"Render for simple\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>viewConfig</i> = \"simple\"</h3>\r\n                                <p>Builds on top of \"bare\" but provides a refresh button.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"./search.png\"\r\n                                alt=\"Render for search\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>viewConfig</i> = \"search\"</h3>\r\n                                <p>Builds on top of \"simple\" but provides search-by-column functionality</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"./all.png\"\r\n                                alt=\"Render for all\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>viewConfig</i> = \"all\"</h3>\r\n                                <p>Builds on top of \"search\" but provides options to add, edit, and delete rows.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <img\r\n                                className=\"d-block w-100\"\r\n                                src=\"./allnosearch.png\"\r\n                                alt=\"Render for allnosearch\"\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>viewConfig</i> = \"allnosearch\"</h3>\r\n                                <p>Presents the same features of \"all\", but excludes search-by-column functionality.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <hr/>\r\n                <section id={\"props\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Props </h3>\r\n\r\n                    <h5 id={\"basics\"} style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n                    <dl class=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>columns</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">the list of columns for the given grid.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> an array of JSON objects that contains the properties \"name\" for the name/id of the column, and \"title\" for the column's header title </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\"> columns=&#123; &nbsp; [&#123;name: \"name\", title: \"Name\"&#125;, &#123;name: \"age\", title: \"Age\"&#125;] &nbsp; &#125;</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>rows</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">the list of rows (data) for the given grid. <b><i> Object keys must match the column \"name\" (case-sensitive). </i></b>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> an array of JSON objects whose keys corresponds to the columns prop. </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">rows=&#123; &nbsp; [ &#123;name: \"Sarah\", age: 24&#125;, &#123;name: \"Sam\", age: 32&#125; ] &nbsp; &#125;</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Notes</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> For proper sorting behavior, ensure to pass numbers as column values for number-typed\r\n                            columns.\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Interacting With Data Section ======================*/}\r\n\r\n                    <section id={\"interactions\"}/>\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Interacting With Data: </h5>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Disabling </h6>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>disableModifications</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether to disable making any changes to the grid, but allows for viewing only.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> boolean</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Creating </h6>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>createToggled</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">responds to the user's desire to add new entry.\r\n                            Note: that this won't provide any create form.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>viewConfig = \"all\", \"allnosearch\"</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Editing </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>editedValues</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> retrieves the row that has been edited. The callback function will be\r\n                            called with a parameter containing an array of JSON objects where the first element is a row\r\n                            corresponding to one of the rows in the “row” prop, and the second element being the changes\r\n                            made to that row.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>viewConfig = \"all\", \"allnosearch\"</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>blockedColumns</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a list of columns that will be blocked from editing.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array corresponding to elements in the “columns” prop</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>editExternally</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> specifies whether the developer wants to handle editing on their own, and not allow for in-line editing as provided.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\">false</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>editToggled</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>editToggled</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> a function that passes two parameters (row object based on \"Rows\" prop, and it's index)\r\n                            which allows the developer to handle it's data changes.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>editExternally</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>hideOnSubmit</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> specifies whether the edit button should hide everytime a user completes an edit.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\">false</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Deleting </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>deletedValues</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> retrieves the rows that the user opted to delete. The callback\r\n                            function\r\n                            will be called with a parameter containing an array of JSON objects corresponding to the\r\n                            rows\r\n                            provided in “rows” prop.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>viewConfig = \"all\", \"allnosearch\"</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>clearDeletedRows</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether to clear the list of rows selected for deletion.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\">false</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>revertClearDeletedRows</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>revertClearDeletedRows</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">reverts the toggle made by clearDeletedRows to restore normal state.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>clearDeletedRows</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Selecting </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>toggleSelect</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether to show the select buttons on the left side of the rows\r\n                            for\r\n                            external manipulation. If set to true, then selectValues prop needs to exist & have a\r\n                            callback\r\n                            function set to it, otherwise the select buttons will NOT render. It will also not render if\r\n                            “viewConfig” is set to “all” or “allnosearch”.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\">false</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>selectedValues</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>selectedValues</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called by GridComponent to pass the values that the\r\n                            users have selected to the parent component; this will return an array of JSON object(s)\r\n                            that\r\n                            corresponds to the ones provided in the rows prop.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>toggleSelect</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>resetSelections</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether to reset selections made in the grid.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>selectionsWereReset</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called once resetSelections took effect.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Refreshing </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>refreshToggled</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">responds to the user's desire to refresh the data in the grid. Note\r\n                            that\r\n                            the ideal response to this is to change the values provided in the “columns” and “rows” prop\r\n                            of\r\n                            GridComponent to reflect the latest data\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>viewConfig = \"simple\", \"search\", \"all\", \"allnosearch\"</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Searching </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>searchValue</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called by GridComponent to pass the column selected for\r\n                            search, as well as the search value.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>viewConfig = \"all\"</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>resetSearch</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether to reset the search field.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>revertResetSearch</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>revertResetSearch</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called once the search field has been successfully reset.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>resetSearch</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>blockedSearchColumns</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a list of columns that will be blocked for searching.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array corresponding to elements in the “columns” prop</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Filtering </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>filterByColumnEnabled</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether columns in the grid can be filtered through.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>filterArray</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>filterArray</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> specifies which column(s) to filter the grid by along with their corresponding values.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array of JSON objects with the following properties:\r\n                            <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                <li>i. \"columnName\", which corresponds to values in the \"columns\" property</li>\r\n                                <li>ii. \"value\", which is the value to filter that column by.</li>\r\n                            </ul>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">filterArray=&#123;&nbsp;[&nbsp;&#123;columnName: \"name\", value: \"Adam\"&#125;&nbsp;]&nbsp;&#125;</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>filterByColumnEnabled == true </i></dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Displaying Data Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <section id={\"displaying\"}/>\r\n                    <h5 id={\"basics\"} style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Displaying Data </h5>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Grouping </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>groupsEnabled</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether the rows in the grid should be grouped by a specified column.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>groupBy</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>groupBy</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> the column to group the rows by.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> a string whose value corresponds to a column in the \"columns\" property.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">groupBy=&#123;\"name\"&#125;</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>groupsEnabled == true</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Summarizing </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryItemsEnabled</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> toggles whether to show a \"summary\" section on a corresponding column.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryItems</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryItems</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> the column to provide a summary for\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array of JSON object with the following properties:\r\n                            <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                <li>i. \"columnName\", which corresponds to a value in the \"columns\" property</li>\r\n                                <li>ii. \"type\", which is the type of summary to provide. Can be one of the following: </li>\r\n                                    <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                        <li>-sum</li>\r\n                                        <li>-max</li>\r\n                                        <li>-min</li>\r\n                                        <li>-avg</li>\r\n                                        <li>-count</li>\r\n                                    </ul>\r\n                            </ul>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">summaryItems=&#123;&nbsp; [&nbsp;&#123;columnName: \"price\", type: \"sum\"&#125;&nbsp;]&nbsp;&#125;</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryItems == true</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryIsCustomized</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> toggles whether the developer will pass in their own summary value.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs To Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryValue</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryValue</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> the summary value to display. Note: this value will override the internal summary's calculated value.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">string or numeric</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                        <dd className=\"col-sm-9\"><i>summaryIsCustomized == true</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Column Reordering </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>colReorder</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether the user is allowed to reorder the columns.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Sorting Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <section id={\"sorting\"}/>\r\n                    <h5 id={\"basics\"} style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Sorting </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>gridSorting</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> specifies the sorting on the grid based on a specified column from the \"columns\" property, and order\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array of JSON object where the property is the column name, and value is either \"asc\" or \"desc\".\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">gridSorting=&#123;&nbsp; [&nbsp;&#123;name: \"asc\"&#125;&nbsp;]&nbsp;&#125;</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>sortingColumnExtensions</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">allows the developer to specify how data should be sorted for specified column(s).</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array of JSON objects that contain the following properties:\r\n                            <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                <li>i. \"columnName\", which corresponds to a value in the \"columns\" property</li>\r\n                                <li>ii. \"compare\", which is a callback compare function that takes two parameters, and returns 0, 1, or -1.\r\n                                    <br/><br/><i><b>Here's an example for comparing dates:</b></i>\r\n                                    <br/>&emsp;const compareDates = (a,b) => &#123;\r\n                                    <br/>&emsp;&emsp;if (&nbsp;(a === null && b === null) &nbsp; || &nbsp;(a === undefined && b === undefined)&nbsp;) <br/>\r\n                                    &emsp;&emsp;&emsp;return 1;\r\n                                    <br/>&emsp;&emsp;else if (a === null &nbsp; || &nbsp;a === undefined) <br/>\r\n                                    &emsp;&emsp;&emsp;return -1;\r\n                                    <br/>&emsp;&emsp;else if (b === null &nbsp; || &nbsp;b === undefined) <br/>\r\n                                    &emsp;&emsp;&emsp;return 1;\r\n                                    <br/>&emsp;&emsp;else &#123; <br/>\r\n                                    &emsp;&emsp;&emsp;const dateA = Date.parse(a);<br/>\r\n                                    &emsp;&emsp;&emsp;const dateB = Date.parse(b);<br/>\r\n                                    <br/>\r\n                                    &emsp;&emsp;&emsp;if (dateA === dateB)<br/>\r\n                                    &emsp;&emsp;&emsp;&emsp;return 0;<br/>\r\n                                    &emsp;&emsp;&emsp;return (dateA &lt; dateB) ? -1 : 1;\r\n                                    <br/>&emsp;&emsp;&#125;\r\n                                    <br/>&emsp;&#125;\r\n                                </li>\r\n                            </ul>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">sortingColumnExtensions=&nbsp;[&nbsp;&#123;columnName: \"name\", compare: compareDates&#125;&nbsp;]</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>remoteSorting</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether remote sorting is implemented to this grid or not.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs to Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>selectedSorting</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>selectedSorting</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called by GridComponent when the user toggles to sort by a specific column.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a callback function that receives a JSON object as parameter containing column name and order.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Sample Parameter </dt>\r\n                        <dd className=\"col-sm-9\">&#123;name: asc&#125;</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>remoteSorting</i></dd>\r\n                    </dl>\r\n\r\n\r\n                    {/*====================== Paging Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <section id={\"paging\"}/>\r\n                    <h5 id={\"basics\"} style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Paging </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>pageConfig</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">setting the default number of entries to view per page, as well as what\r\n                            options will be provided to the user.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">an array composed of two elements:\r\n\r\n\r\n                            <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                <li>i. The default page size set</li>\r\n                                <li>ii. An array of page size options</li>\r\n                            </ul></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>remotePaging</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">toggles whether remote paging is implemented to this grid or not.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs to Have</dt>\r\n                        <dd className=\"col-sm-9\"><i>totalCount, currentPage, changeCurrentPage, currentPageSize, changeCurrentPageSize</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>totalCount</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">lets the GridComponent know how many data it will page through.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">number</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>remotePaging</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>currentPage</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">lets GridComponent know which page to toggle as selected.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>remotePaging</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>changeCurrentPage</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called by GridComponent whenever the user clicks to view another page. </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>remotePaging</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>currentPageSize</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">required when remotePaging is toggled to true; this lets GridComponent\r\n                            know\r\n                            which pageSize to toggle as selected.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>remotePaging</i></dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>changeCurrentPageSize</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a function called by GridComponent whenever the user clicks to view more rows per page. </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">callback function</dd>\r\n\r\n                        <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed By</dt>\r\n                        <dd className=\"col-sm-9\"><i>remotePaging</i></dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Styling ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <section id={\"styling\"}/>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Styling </h5>\r\n\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Grid Appearance </h6>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>viewConfig</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> toggles a particular grid setup.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> a string of either\r\n                            <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                <li>i. “bare” = renders only the grid with pagination & “# of entries at a time” options\r\n                                    available.\r\n                                </li>\r\n                                <li>ii. “simple” = similar to bare, but includes a refresh button</li>\r\n                                <li>iii. “search” = similar to simple, but includes search by column components</li>\r\n                                <li>iv. “all” = similar to search but includes the create/edit/delete components</li>\r\n                                <li>v. “allnosearch” = similar to all but excludes the search by column components</li>\r\n                            </ul>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\"> \"bare\"</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>columnWidths</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> the specified column widths for each column. If not specified, the default will be applied. <b><i> Object keys must match the column \"name\" (case-sensitive). </i></b>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> JSON object whose keys corresponds to the columns \"name\" prop.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\">columnWidths=&#123;&nbsp;&#123;name: 100, age: 50&#125;&nbsp;&#125;</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\"> 180</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>hiddenColumns</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> a list of hidden columns on the grid.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> an array of columns whose values correspond to columns in the \"columns\" property. </dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>buttonColors</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">allows the developer to pass in their own values for the colors of the button text and background in the grid.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">a JSON object that contains one or more of the following property pairs:\r\n                            <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                <li>-Create Button:\r\n                                    <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                        <li>i. \"createColor\" = the background color of create button</li>\r\n                                        <li>ii. \"createTextColor\" = the text color of create button</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>-Edit Button:\r\n                                    <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                        <li>i. \"editColor\" = the background color of edit button</li>\r\n                                        <li>ii. \"editTextColor\" = the text color of edit button</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>-Delete Button:\r\n                                    <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                        <li>i. \"deleteColor\" = the background color of delete button</li>\r\n                                        <li>ii. \"deleteTextColor\" = the text color of delete button</li>\r\n                                    </ul>\r\n                                </li>\r\n                                <li>-Refresh Button:\r\n                                    <ul style={{textAlign: \"left\", listStyleType: \"none\"}}>\r\n                                        <li>i. \"refreshColor\" = the background color of refresh button</li>\r\n                                        <li>ii. \"refreshTextColor\" = the text color of refresh button</li>\r\n                                    </ul>\r\n                                </li>\r\n                            </ul>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\"> buttonColors=&nbsp;&#123; <br/>\r\n                            &emsp;&emsp;createColor: \"#849AB3\"<br/>\r\n                            &emsp;&emsp;createTextColor: \"white\"<br/>\r\n\r\n                            <br/>\r\n\r\n                            &emsp;&emsp;editColor: \"#849AB3\"<br/>\r\n                            &emsp;&emsp;editTextColor: \"white\"<br/>\r\n\r\n                            <br/>\r\n\r\n                            &emsp;&emsp;deleteColor: \"#849AB3\"<br/>\r\n                            &emsp;&emsp;deleteTextColor: \"white\"<br/>\r\n\r\n                            <br/>\r\n\r\n                            &emsp;&emsp;refreshColor: \"#849AB3\"<br/>\r\n                            &emsp;&emsp;refreshTextColor: \"white\"<br/>\r\n\r\n                            &nbsp; &#125;\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n                    <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Grid Customizations </h6>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>gridContainerClass</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">a class name to give to the container of the GridComponent to allow for CSS manipulation</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">string</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>showPagingPanel</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\">specifies whether the paging panel (page size, current/next/previous page) at the bottom of the grid is shown</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\">boolean</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\">Name</dt>\r\n                        <dd className=\"col-sm-9\"><i>tableCell</i></dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\"> the specified styling/behavior for cells of the table; can be used for defining how cells should appear for certain columns, onClick callbacks when clicking a table data, etc.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\"> a function whose parameter is a JSON object contains &#123;row, column, ...restProps&#125;, and the function returns an instance of &#60;Table.Cell/&#62;\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Example</dt>\r\n                        <dd className=\"col-sm-9\"> <b><i>below demonstrates a table cell for the \"add\" column to display an add icon, then performing callback function upon clicking</i></b>\r\n                            <br/>&emsp;tableCell=&#123;\r\n                                &emsp;(&#123;row, column, ...restProps&#125;) => &#123; <br/>\r\n                                &emsp;&emsp;if (column.title === \"Add\") &#123;<br/>\r\n                                &emsp;&emsp;&emsp;return &#60;Table.Cell\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;row=&#123;row&#125;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;&#123;...restProps&#125;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;className=&#123;'icon'&#125;\r\n                                    <br/>&emsp;&emsp;&emsp;&#62;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;&#60;div style=&#123;&#123;width: \"1vw\"&#125;&#125; onClick=&#123;() =&#62; this.showAdditionalInfoPopup(true, row, \"add\")&#125;&#62;\r\n                                            <br/>&emsp;&emsp;&emsp;&emsp;&emsp;&#60;Image src=&#123;create&#125; style=&#123;&#123;display: \"inline\"&#125;&#125;/&#62;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;&#60;/div&#62;\r\n                                        <br/>&emsp;&emsp;&emsp;&#60;/Table.Cell&#62;\r\n                                    <br/>&emsp;&emsp;&#125;&emsp;else &#123;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;return &#60;Table.Cell\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;&emsp;row=&#123;row&#125;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;&emsp;&#123;...restProps&#125;\r\n                                    <br/>&emsp;&emsp;&emsp;&emsp;&#62;\r\n                                        <br/>&emsp;&emsp;&emsp;&emsp;&emsp;&#123;row[column.name]&#125;\r\n                                        <br/>&emsp;&emsp;&emsp;&#60;/Table.Cell&#62;\r\n                                    <br/>&emsp;&emsp;&#125;\r\n                            <br/>&emsp;&#125;</dd>\r\n                    </dl>\r\n\r\n                </section>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GridComponentInfo;","import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css';\r\nimport {Carousel, Image} from \"react-bootstrap\";\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\nimport Prism from \"prismjs\";\r\n\r\nclass PopUpComponentInfo extends Component {\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n                <h1 className=\"display-4\" style={{textAlign: \"center\"}}>Popup Component</h1>\r\n\r\n                <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                        <ol>\r\n                            <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#configs\">Available Configurations</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#implementation\">Sample Implementation</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#props\">Props</a></li>\r\n                        </ol>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                        <p> &#8226; You need to include the following on your package.json </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp>\r\n                                <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;react-bootstrap&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;bootstrap&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;react-icons&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p>&#125;</p>\r\n                            </samp>\r\n                        </div>\r\n\r\n                        <p> &#8226; Then on your index.js file include: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import 'bootstrap/dist/css/bootstrap.min.css'; </samp>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <p> &#8226; Lastly, import the PopupComponent for use: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import PopupComponent from \"./PopupComponent\"; </samp>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"configs\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Available Configurations </h3>\r\n\r\n                    <Carousel pauseOnHover={true}>\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                className=\"d-block w-100\"\r\n                                src=\"./closeOnly.png\"\r\n                                alt=\"Render for closeOnly\"\r\n                                style={{paddingLeft: \"400px\", paddingRight: \"400px\", paddingBottom: \"10px\"}}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3><i>footerConfig</i> = \"closeOnly\"</h3>\r\n                                <p>Displays only a close button.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                className=\"d-block w-100\"\r\n                                src=\"./submit.png\"\r\n                                alt=\"Render for simple\"\r\n                                style={{paddingLeft: \"400px\", paddingRight: \"400px\", paddingBottom: \"10px\"}}\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>footerConfig</i> = \"submit\"</h3>\r\n                                <p>Displays a submit button along with a close button.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                className=\"d-block w-100\"\r\n                                src=\"./popupall.png\"\r\n                                alt=\"Render for search\"\r\n                                style={{paddingLeft: \"400px\", paddingRight: \"400px\", paddingBottom: \"10px\"}}\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>footerConfig</i> = \"all\"</h3>\r\n                                <p>Displays the close, reset, and submit buttons (ideal for forms).</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                className=\"d-block w-100\"\r\n                                src=\"./custom.png\"\r\n                                alt=\"Render for all\"\r\n                                style={{paddingLeft: \"400px\", paddingRight: \"400px\", paddingBottom: \"10px\"}}\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h3><i>footerConfig</i> = \"custom\"</h3>\r\n                                <p>You can define what appears on the footer section.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                className=\"d-block w-100\"\r\n                                src=\"./formInside.png\"\r\n                                alt=\"Render for all with a form as the content\"\r\n                                style={{paddingLeft: \"400px\", paddingRight: \"400px\", paddingBottom: \"10px\"}}\r\n                            />\r\n\r\n                            <Carousel.Caption>\r\n                                <h4>You can utilize the content portion of the popup to have another component.</h4>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <section id={\"implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Sample Implementation </h3>\r\n\r\n                    <section className={\"codeSampleImplementation\"}>\r\n                        <pre className=\"language-javascript\">\r\n                            <code>\r\n                                {popupCodeSample}\r\n                            </code>\r\n                        </pre>\r\n                    </section>\r\n\r\n                </section>\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"props\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Props </h3>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> header</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The title of the popup.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> content</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The content of the popup. PopupComponent\r\n                            offers flexibility on the content, such as placing another component (ex. FormComponent)\r\n                            inside.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string, or another component. </dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> footerConfig</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            The buttons to appear at the foot of the popup.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            <p>A string of either</p>\r\n                            <p>i. “custom” = giving the developer the option to define their own buttons in the\r\n                                footer</p>\r\n                            <p>ii. “closeOnly” = renders only a close button to close the popup.</p>\r\n                            <p>iii. “submit” = renders a close button as well as submit button.</p>\r\n                            <p>iv. “all” = renders a close, reset, & submit button. Ideal for forms</p>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Notes</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            Providing the value of “custom” requires for customFooter to be defined\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> closeToggled</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            This property uses the supplied callback function to close the popup component. Ideally, the\r\n                            callback function should set the state of showing the popup to false.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            A callback function\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Additional Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Additional Customization </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> resetToggled</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> When “footerConfig” is set to “all”, this\r\n                            must be included to respond to the user's desire to reset what's placed in the content body.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A callback function</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> submitToggled</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            When “footerConfig” is set to “all” or “submit”, this must be included to respond to the\r\n                            user's desire to submit what's placed in the content body.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A callback function</dd>\r\n                    </dl>\r\n\r\n                </section>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst popupCodeSample = `<PopupComponent \r\n    //Required Ones \r\n    header={\"Title\"}\r\n    content={\"Message here\"}\r\n    footerConfig={\"all\"}\r\n    closeToggled={this.closePopup}\r\n    \r\n    //Optional One \r\n    resetToggled={this.handleReset} \r\n    submitToggled={this.handleSubmit} \r\n/>`\r\n\r\nexport default PopUpComponentInfo;","import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css';\r\nimport {Image} from \"react-bootstrap\";\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\nimport Prism from \"prismjs\";\r\n\r\nclass MaskComponentInfo extends Component {\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\" style={{textAlign: \"center\"}}>Mask Component</h1>\r\n\r\n                <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                        <ol>\r\n                            <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#demo\">Demonstration</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#implementation\">Sample Implementation</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#props\">Props</a></li>\r\n                        </ol>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                        <p> &#8226; You need to include the following on your package.json </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp>\r\n                                <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;react-bootstrap&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;bootstrap&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p>&#125;</p>\r\n                            </samp>\r\n                        </div>\r\n\r\n                        <p> &#8226; Then on your index.js file include: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import 'bootstrap/dist/css/bootstrap.min.css'; </samp>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <p> &#8226; Add the loading.png file to the public folder. <i> Note: you can put your own image on there, as long as its named \"loading.png\". </i> </p>\r\n\r\n                        <p> &#8226; Lastly, import the MaskComponent for use: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import MaskComponent from \"./MaskComponent\"; </samp>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <section id={\"demo\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Demonstration </h3>\r\n\r\n                    <Image\r\n                        src=\"./maskcomponent.gif\"\r\n                        alt=\"Clip demonstrating the loader component overlaying a grid.\"\r\n                        style={{width: \"50%\"}}\r\n                    />\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <section id={\"implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Sample Implementation </h3>\r\n\r\n                    <section className={\"codeSampleImplementation\"}>\r\n                        <pre className=\"language-javascript\">\r\n                            <code>\r\n                                {maskCodeSample}\r\n                            </code>\r\n                        </pre>\r\n                    </section>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"props\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Props </h3>\r\n\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> header</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The title of the popup.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> content</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The message to appear in the mask popup.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> show</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>Toggles whether to show the mask or not.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A boolean</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Note</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>It's ideal to assign a parent's state\r\n                            property here to toggle when to show the mask or not\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Additional Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Additional Customization </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> loadingIcon</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Toggles whether to show a rotating loading\r\n                            icon in the content.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Values</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A boolean</dd>\r\n                    </dl>\r\n\r\n                </section>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst maskCodeSample = `<MaskComponent \r\n    //Required Ones \r\n    header={\"Please Wait\"}\r\n    content={\"Loading\"}\r\n    show={this.state.toggleShow}\r\n    \r\n    //Optional One \r\n    loadingIcon={true} \r\n/>`\r\n\r\nexport default MaskComponentInfo;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css';\r\nimport {Carousel, Image} from \"react-bootstrap\";\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\nimport Prism from \"prismjs\";\r\n\r\nclass FileUploadComponentInfo extends Component {\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\" style={{textAlign: \"center\"}}>File Upload Component</h1>\r\n\r\n                <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                        <ol>\r\n                            <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#demo\">Available Configurations</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#implementation\">Sample Implementation</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#props\">Props</a></li>\r\n                        </ol>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                        <p> &#8226; You need to include the following on your package.json </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp>\r\n                                <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-css&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-react&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;react-dropzone&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p>&#125;</p>\r\n                            </samp>\r\n                        </div>\r\n\r\n                        <p> &#8226; Then on your index.js file include: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import 'semantic-ui-css/semantic.min.css'; </samp>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <p> &#8226; Add the upload.png file to the public folder.\r\n                            <i> Note: you can put your own image on there, as long as its named \"upload.png\".</i>\r\n                        </p>\r\n\r\n                        <p> &#8226; Lastly, import the FileUploadComponent for use: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import FileUploadComponent from \"./FileUploadComponent\"; </samp>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <section id={\"demo\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Available Configurations </h3>\r\n\r\n                    <Carousel pauseOnHover={true} interval={20000}>\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                src=\"./fileupload.gif\"\r\n                                alt=\"Clip demonstrating the FileUploadComponent in its default state.\"\r\n                                style={{width: \"50%\"}}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Default appearance</h3>\r\n                                <p>This is how the FileUploadComponent appears as an upload field with showFileUploadManager set to true. </p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                src=\"./fileuploadbtn.gif\"\r\n                                alt=\"Clip demonstrating the loader FileUploadComponent as a button.\"\r\n                                style={{width: \"50%\"}}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3> <i>uploadByButton </i> = true </h3>\r\n                                <p>On the other hand it can also be set as a button.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <hr/>\r\n                <section id={\"implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Sample Implementation </h3>\r\n\r\n                    <section className={\"codeSampleImplementation\"}>\r\n                        <pre className=\"language-javascript\">\r\n                            <code>\r\n                                {fileUploadSampleCode}\r\n                            </code>\r\n                        </pre>\r\n                    </section>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <hr/>\r\n                <section id={\"props\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Props </h3>\r\n\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> files</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>Uses the callback function to return the list of files.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A callback function.</dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Additional Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Additional Customization </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> fileType</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Determines the file type that the file uploader will accept.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> \"\" (which will accept any file type).\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            <p>A comma-separated list of unique content type specifiers (string format):</p>\r\n                            <p>&#8226; A file extension starting with the STOP character (U+002E). (e.g. .jpg, .png, .doc).</p>\r\n                            <p>&#8226; A valid MIME type with no extensions.</p>\r\n                            <p>&#8226; audio&#47;* representing sound files.</p>\r\n                            <p>&#8226; video&#47;* representing video files.</p>\r\n                            <p>&#8226; image&#47;* representing image files.</p>\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    <hr width={\"85%\"}/>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> fileUploadText</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The label of the upload field/button.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>\r\n                            <p> &#8226; If uploadByBtn is set to true, the default fileUploadText is “Upload”</p>\r\n                            <p> &#8226; Otherwise, it's “Drag and drop some files here, or click to select files”</p>\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    <hr width={\"85%\"}/>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> showFileUploadManager</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Specifying whether to show the \"files uploaded\" queue to the user, and allow them to reset, delete, and submit them.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> true\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A boolean\r\n                        </dd>\r\n                    </dl>\r\n\r\n                    <hr width={\"85%\"}/>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> resetUponSubmit</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Determines whether to reset the list of files uploaded upon clicking \"submit\".\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> true\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A boolean</dd>\r\n                    </dl>\r\n\r\n                    <hr width={\"85%\"}/>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> uploadByBtn</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Specifying whether to render a button, or an upload field.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> false\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}>A boolean</dd>\r\n                    </dl>\r\n\r\n                </section>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst fileUploadSampleCode = `<FileUploadComponent\r\n     //Required Ones\r\n     files={this.getUploadedFiles}\r\n\r\n     //Optional Ones \r\n     fileType={\".txt, .pdf\"}\r\n     fileUploadText={\"Upload Here!\"}\r\n     showFileUploadManager={true}\r\n     resetUponSubmit={false}\r\n     uploadByBtn={false}\r\n/>\r\n`;\r\n\r\nexport default FileUploadComponentInfo;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css';\r\nimport {Carousel, Image} from \"react-bootstrap\";\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\nimport Prism from \"prismjs\";\r\n\r\nclass LoaderComponentInfo extends Component {\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"display-4\" style={{textAlign: \"center\"}}>Loader Component</h1>\r\n\r\n                <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                        <ol>\r\n                            <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#demo\"> Available Configurations </a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#implementation\">Sample Implementation</a></li>\r\n                            <li><a className=\"nav-link glossary\" href=\"#props\">Props</a></li>\r\n                        </ol>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                    <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                        <p> &#8226; You need to include the following on your package.json </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp>\r\n                                <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-css&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-react&#8221;: &#8220;latest&#8221;,</p>\r\n                                <p>&#125;</p>\r\n                            </samp>\r\n                        </div>\r\n\r\n                        <p> &#8226; Then on your index.js file include: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import 'semantic-ui-css/semantic.min.css'; </samp>\r\n                        </div>\r\n\r\n                        <br/>\r\n                        <p> &#8226; Lastly, import the LoaderComponent for use: </p>\r\n                        <div style={{paddingLeft: 80}}>\r\n                            <samp> import LoaderComponent from \"./LoaderComponent\"; </samp>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <section id={\"demo\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}>  Available Configurations  </h3>\r\n\r\n                    <Carousel pauseOnHover={true}>\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                src=\"./loader.gif\"\r\n                                alt=\"Code for rendering form\"\r\n                                style={{width: \"50%\"}}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3>Default appearance</h3>\r\n                                <p>This is how the LoaderComponent appears with inverted not being specified. </p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n\r\n                        <Carousel.Item>\r\n                            <Image\r\n                                src=\"./loaderInverted.gif\"\r\n                                alt=\"Code for rendering form\"\r\n                                style={{width: \"50%\"}}\r\n                            />\r\n                            <Carousel.Caption>\r\n                                <h3><i>inverted</i> = false</h3>\r\n                                <p>You can set the LoaderComponent to have a dark background.</p>\r\n                            </Carousel.Caption>\r\n                        </Carousel.Item>\r\n                    </Carousel>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                   ====================== Next Section ===================\r\n                   =======================================================*/}\r\n                <section id={\"implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Sample Implementation </h3>\r\n\r\n                    <section className={\"codeSampleImplementation\"}>\r\n                        <pre className={\"language-javascript\"}>\r\n                            <code>\r\n                                {loaderSampleCode}\r\n                            </code>\r\n                        </pre>\r\n                    </section>\r\n                </section>\r\n\r\n                {/*=======================================================\r\n                ====================== Next Section ======================\r\n                =======================================================*/}\r\n                <section id={\"props\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                    <hr/>\r\n                    <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Props </h3>\r\n\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> isLoading</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Determines if the content needs to be overlayed.</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A boolean</dd>\r\n                    </dl>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"85%\"}/>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> content</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> The content to be overlayed.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> An object</dd>\r\n                    </dl>\r\n\r\n                    {/*====================== Additional Section ======================*/}\r\n\r\n                    <hr width={\"95%\"}/>\r\n                    <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Additional Customization </h5>\r\n\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> loadingMessage</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> What message to appear at the center of the overlay.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A string</dd>\r\n                    </dl>\r\n\r\n                    <hr width={\"85%\"}/>\r\n                    <dl className=\"row\">\r\n                        <dt className=\"col-sm-3\"> Name</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\", fontStyle: \"italic\"}}> inverted</dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Description</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> Whether to invert the background color of the overlay.\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Default</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> true\r\n                        </dd>\r\n\r\n                        <dt className=\"col-sm-3\"> Value</dt>\r\n                        <dd className=\"col-sm-9\" style={{textAlign: \"left\"}}> A boolean</dd>\r\n                    </dl>\r\n\r\n                </section>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst loaderSampleCode = `<LoaderComponent\r\n//Required Ones \r\nisLoading={this.state.isLoadingGrid}\r\ncontent={gridComponentVariable}\r\n\r\n//Optional Ones \r\nloadingMessage={\"Loading...\"}\r\ninverted={false}\r\n/>`\r\n\r\nexport default LoaderComponentInfo;\r\n\r\n","import React, {Component} from 'react';\r\nimport '../../styling/ComponentStyling.css';\r\nimport {CircleArrow as ScrollUpButton} from \"react-scroll-up-button\";\r\nimport Prism from \"prismjs\";\r\nimport {\r\n    configFileSampleCode,\r\n    implementingComponentSampleCode,\r\n    reducerIDSampleCode,\r\n    reducerSearchIDSampleCode,\r\n    searchColumnSampleCode,\r\n    searchFormColumnCountSampleCode,\r\n    searchFormDefaultSampleCode,\r\n    searchFormFieldContainerSampleCode,\r\n    searchFormFieldsCode, searchFormTableCellConfigSampleCode,\r\n    searchGridColumnWidthsSampleCode,\r\n    searchGridHiddenColumnsSampleCode, searchGridWidthSampleCode,\r\n    searchMenuOptionsSampleCode\r\n} from \"../../utilities/constants/SearchFormCodeConstants\";\r\nimport {Carousel} from \"react-bootstrap\";\r\n\r\nclass SearchFormComponentInfo extends Component {\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n\r\n                    <h1 className=\"display-4\" style={{textAlign: \"center\"}}>Search Form Component</h1>\r\n\r\n                    <section data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Glossary </h3>\r\n\r\n                        <div style={{textAlign: \"left\", paddingLeft: 30}}>\r\n                            <ol>\r\n                                <li><a className=\"nav-link glossary\" href=\"#prereq\">Pre-Requisites</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#implementation\">How-To Implement</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#sample-implementation\">Sample\r\n                                    Implemention</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#api\">Props</a></li>\r\n                                <li><a className=\"nav-link glossary\" href=\"#configProps\">Configuration Props</a></li>\r\n\r\n                                <ul>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#configProps\">Setting Up The Fields</a>\r\n                                    </li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#customizingFields\">Customizing The\r\n                                        Fields</a></li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#fieldNavBar\">Navigation Bar</a></li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#alternateSetup\">Alternate Setup</a></li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#reduxSetup\">Redux Setup For Search\r\n                                        Results</a></li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#gridSetup\">Setting Up The Grid</a></li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#gridCustomization\">Customizing the\r\n                                        Grid</a></li>\r\n                                    <li><a className=\"nav-link glossary\" href=\"#gridStyling\">Styling The Grid</a></li>\r\n                                </ul>\r\n                            </ol>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <section id={\"prereq\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <hr/>\r\n\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Pre-Requisites </h3>\r\n\r\n                        <div style={{textAlign: \"left\", paddingLeft: 70}}>\r\n                            <p>  &#8226; You need to include the following on your package.json </p>\r\n                            <div style={{paddingLeft: 80}}>\r\n                                <samp>\r\n                                    <p>&#34;dependencies&#34;:    &#123;</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;bootstrap&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;moment&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-bootstrap&#8221;    &#58; &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-data-export&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-datepicker&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-redux&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;react-select&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;redux&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-css&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;semantic-ui-react&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p style={{marginLeft: \"40px\"}}>&#8220;xlsx&#8221;: &#8220;latest&#8221;,</p>\r\n                                    <p>&#125;</p>\r\n                                </samp>\r\n                            </div>\r\n\r\n                            <p>  &#8226; Then on your index.js file include: </p>\r\n                            <div style={{paddingLeft: 80}}>\r\n                                <p><samp> import 'bootstrap/dist/css/bootstrap.min.css'; </samp></p>\r\n                                <p><samp> import 'semantic-ui-css/semantic.min.css';</samp></p>\r\n                                <p><samp> import \"react-datepicker/dist/react-datepicker.css\"; </samp></p>\r\n                            </div>\r\n\r\n                            <br/>\r\n                            <p>  &#8226; Lastly, import the FormFieldsComponent for use: </p>\r\n                            <div style={{paddingLeft: 80}}>\r\n                                <samp> import SearchFormComponent from './SearchFormComponent' </samp>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <hr/>\r\n                    <section id={\"implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> How-To Implement </h3>\r\n\r\n                        <p style={{textAlign: \"left\", paddingLeft: 70}}> 1. Create the configuration constant and add\r\n                            all necessary properties. </p>\r\n                        <section className={\"codeSampleImplementation\"}>\r\n                            <pre className=\"language-javascript\">\r\n                                <code>\r\n                                    {configFileSampleCode}\r\n                                </code>\r\n                            </pre>\r\n                        </section>\r\n\r\n                        <p style={{textAlign: \"left\", paddingLeft: 70}}> 2. Create SearchFormComponent passing in the\r\n                            configuration file. If SearchFormComponent is a child of tab component, and you want it to\r\n                            be able to open another tab, add a handler for opening another tab. </p>\r\n\r\n                        <section className={\"codeSampleImplementation\"}>\r\n                            <pre className=\"language-javascript\">\r\n                                <code>\r\n                                    {implementingComponentSampleCode}\r\n                                </code>\r\n                            </pre>\r\n                        </section>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <hr/>\r\n                    <section id={\"sample-implementation\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Sample Configurations </h3>\r\n\r\n                        <Carousel pauseOnHover={true}>\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    src=\"./searchForm-regular-sample.png\"\r\n                                    alt=\"Render for regular search form view\"\r\n                                />\r\n                                <Carousel.Caption>\r\n                                    <h3>Standard View Based on Config</h3>\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    src=\"./searchForm-isMetrics-sample.png\"\r\n                                    alt=\"Render for search form where isMetrics === true\"\r\n                                />\r\n\r\n                                <Carousel.Caption>\r\n                                    <h3><i>isMetrics</i> === true</h3>\r\n                                    <p>Grid loads data upon load, refresh available, filtering results available.</p>\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n\r\n                            <Carousel.Item>\r\n                                <img\r\n                                    className=\"d-block w-100\"\r\n                                    src=\"./searchForm-isMetrics-noNav-sample.png\"\r\n                                    alt=\"Render for search form where hasNav === false\"\r\n                                />\r\n\r\n                                <Carousel.Caption>\r\n                                    <h3><i>hasNav</i> === false</h3>\r\n                                    <p>Navigation bar does not get rendered.</p>\r\n                                </Carousel.Caption>\r\n                            </Carousel.Item>\r\n\r\n                        </Carousel>\r\n                    </section>\r\n\r\n                    {/*=======================================================\r\n                    ====================== Next Section ======================\r\n                    =======================================================*/}\r\n                    <hr/>\r\n                    <section id={\"api\"} data-aos={\"fade-right\"} data-aos-delay={\"300\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> APIs </h3>\r\n\r\n                        <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Required </h5>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>config</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\"> The configuration file that the component will use for\r\n                                rendering.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\"> an array of JSON objects whose keys corresponds to the columns\r\n                                prop.\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Optional </h5>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>tabToOpen</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\"> If SearchFormComponent is a child of TabComponent, then\r\n                                SearchFormComponent uses this callback function to request a tab switch. If the tab\r\n                                switch request comes from selected row(s), or a table cell click, then it will pass\r\n                                these values to the callback.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\"> a callback function\r\n                                prop.\r\n                            </dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    <hr/>\r\n                    <section id={\"configProps\"}>\r\n                        <h3 style={{textAlign: \"left\", paddingLeft: 50}}> Configuration Props </h3>\r\n\r\n                        <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Form Fields </h5>\r\n\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Setting Up The Fields </h6>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchFormFields</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">The list of search form fields to be generated.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <p> A JSON object whose keys are the key/id for the fields, and values are objects with\r\n                                    properties \"label\" and \"type\". They follow the given format: </p>\r\n                                <p style={{marginLeft: \"40px\"}}>&lt;<i>key/id of field</i>&gt;: &#123; label: &lt;\r\n                                    <i>label</i>&gt;,\r\n                                    type: &lt;<i>type of field</i>&gt; &#125;</p>\r\n\r\n                                <p>The different types supported are:</p>\r\n                                <ul>\r\n                                    <li><b>\"number\"</b> = restricts input to number only</li>\r\n                                    <li><b>\"double\"</b> = restricts input to double only (&lt;number&gt;.&lt;digits\r\n                                        only&gt;); will append decimal if it is missing from the user's input.\r\n                                    </li>\r\n                                    <li><b>\"date\"</b> = shows a datepicker, and saves the selection in \"mm/dd/yyyy\"\r\n                                        format\r\n                                    </li>\r\n                                    <li><b>\"text\"</b> = allows any input</li>\r\n                                    <li><b>\"textarea\"</b> = shows a textarea that allows for any input</li>\r\n                                    <li><b>\"data\"</b> = does not render an input field; only displays data</li>\r\n                                    <li><b>\"multilineData\"</b> = same as above, but shows a button which, upon clicking,\r\n                                        opens a popup that shows the multi-line data; if value is empty, then the button\r\n                                        is not shown.\r\n                                    </li>\r\n                                    <li><b>\"currencyData\"</b> = converts a double value (not a string) to currency\r\n                                        format, along with dollar sign ($)\r\n                                    </li>\r\n                                    <li><b>&#123;dropdown: &lt;dropdown values&gt;&#125;</b> = displays a select field\r\n                                        <ul>\r\n                                            <li>dropdown values can be one of the following</li>\r\n                                            <ul>\r\n                                                <li>an array of objects in this format:</li>\r\n                                                <p style={{marginLeft: \"60px\"}}>&#123;label: &lt;label&gt;,\r\n                                                    value: &lt;value&gt;, color: &lt;color&gt;&#125;</p>\r\n                                                <li>a hook callback function that handles the asynchronous retrieval of\r\n                                                    dropdown options, and returns a &lt;Select/&gt; object\r\n                                                </li>\r\n                                            </ul>\r\n\r\n                                            <li>There are two optional properties available for added features:\r\n                                                <ul>\r\n                                                    <li><b>\"multiselect\"</b> = boolean that allows for multiple\r\n                                                        selection of values; is false by default if unspecified\r\n                                                    </li>\r\n                                                    <li><b>\"isClearable\"</b> = boolean that allows for the \"x\" symbol to\r\n                                                        appear on the select box allowing it to be clearable upon button\r\n                                                        click; is false by default\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchFormFieldsCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*=============================  Customizing The Fields  ===================================*/}\r\n                    <section id={\"customizingFields\"}>\r\n                        <hr width={\"90%\"}/>\r\n\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Customizing The Fields </h6>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchFormDefaultValues</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies the default value for certain form fields.</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">a JSON an object whose keys correspond to keys in searchFormFields,\r\n                                and whose values are as specified by the developer to be the default values of those\r\n                                specified fields.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchFormDefaultSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchFormFieldsColumnCount</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                Specifies the number of columns that the form fields will span to.\r\n                                <ul>\r\n                                    <li>Supports values 2, 3, and 4</li>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">number</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Default</dt>\r\n                            <dd className=\"col-sm-9\">2</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchFormColumnCountSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchFormFieldsContainerWidth</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies the width that the search form fields will expand to.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">a CSS-supported width value (px, %, etc.)</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Default</dt>\r\n                            <dd className=\"col-sm-9\">'fit-content'</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchFormFieldContainerSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*============================= Search Fields Navigation Bar ===================================*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <section id={\"fieldNavBar\"}>\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Navigation Bar </h6>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>hasNavOptions</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies whether to display the nav options bar</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Default</dt>\r\n                            <dd className=\"col-sm-9\">true</dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchMenuOptions</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies additional nav menu options besides performing search, or\r\n                                resetting the fields\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                an array of JSON objects whose properties are listed below:\r\n                                <ul>\r\n                                    <li><b> key:</b> the key of the option. This is internally used for mapping the\r\n                                        selected nav option with its onClickHandler.\r\n                                    </li>\r\n                                    <li><b> title:</b> the title/label to show for the option</li>\r\n                                    <li>(if desired) one of the following:</li>\r\n                                    <ul>\r\n                                        <li><b> image:</b> the file (.png, .gif, etc.) to show to the left of the option\r\n                                            title\r\n                                        </li>\r\n                                        <li><b> icon:</b> the icon to show to the left of the option title; the icon\r\n                                            corresponds to the name value of the icon found here:\r\n                                            https://react.semantic-ui.com/elements/icon/\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li><b> dependsOnRowSelection:</b> boolean where, if allowRowSelection is set to\r\n                                        true, then the row(s) data selected will be passed on to the onClickHandler\r\n                                        function; if no selections are made before the user toggled this option, then an\r\n                                        alert message will appear telling the user to make row selection(s) first.\r\n                                    </li>\r\n                                    <li><b> action:</b> a string that specifies the action. Can be one of the following\r\n                                        listed below OR can be omitted if onClickHandler just needs to get called.\r\n                                    </li>\r\n                                    <ul>\r\n                                        <li><b> \"downloadFile\" </b>= fires the callback function on the onClickHandler\r\n                                            property. The onClickHandler should handle the downloading of the file.\r\n                                        </li>\r\n                                        <li><b> \"openPopup\" </b>= triggers a popup to open, and will fire the\r\n                                            popupContent callback to get the content to be displayed inside the popup.\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>(if action is set to \"downloadFile\") <b> onClickHandler </b>= a hook callback\r\n                                        function that passes in the following parameters:\r\n                                    </li>\r\n                                    <ul>\r\n                                        <li><i> rowsArray </i>= an array of row objects where, for each object, contains\r\n                                            keys that correspond to searchGridColumns, and its values are its\r\n                                            corresponding column value\r\n                                        </li>\r\n                                        <li><i> resetCallback </i>= a callback function to be triggered by the hook\r\n                                            callback to specify whenever the action performed is completed; this is\r\n                                            important to get called so that the dropdown option will trigger the\r\n                                            download again\r\n                                        </li>\r\n                                    </ul>\r\n                                    <li>(if action is \"openPopup\") the following properties:</li>\r\n                                    <ul>\r\n                                        <li><b> popupHeader:</b> a string that is the title of the popup</li>\r\n                                        <li><b> popupClassName:</b> a string that is passed on as a classname for the\r\n                                            popup for CSS styling; helps with specifying the margins (which determines\r\n                                            the width of the specific popup) via CSS\r\n                                        </li>\r\n                                        <li><b> popupContent:</b> a hook callback function that will handle the contents\r\n                                            to display inside the popup. SearchFormComponent passes in the following\r\n                                            parameters:\r\n                                        </li>\r\n                                        <ul>\r\n                                            <li><i> rowsArray </i>= an array of row objects where, for each object,\r\n                                                contains keys that correspond to searchGridColumns, and its values are\r\n                                                its corresponding column value\r\n                                            </li>\r\n                                            <li><i> resetCallback </i>= a callback function that can be used by the hook\r\n                                                callback function to specify whethe to close the popup, or (if the\r\n                                                SearchFormComponent is a child of TabComponent) to transfer tabs.\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ul>\r\n                                    <li><b> subMenuItems:</b> an array of objects to appear as a sub-menu for the search\r\n                                        menu nav option.\r\n                                    </li>\r\n                                    <ul>\r\n                                        <li>Its objects contains the same properties as searchMenuOptions since, when\r\n                                            the user selects them, they use the same internal handling.\r\n                                        </li>\r\n                                        <li>These properties include: key, title, image/icon, dependsOnRowSelection,\r\n                                            action, onClickHandler, popupHeader, popupClassName, and popupContent.\r\n                                        </li>\r\n                                    </ul>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchMenuOptionsSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*-----Next Entry-----*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <section id={\"alternateSetup\"}>\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Alternate Setup </h6>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>isMetrics</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Description</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                Specifies whether the SearchFormComponent should be formatted as a filterable metrics\r\n                                grid.\r\n                                <br/>\r\n                                If set to true:\r\n                                <ul>\r\n                                    <li>The \"Reset\" and \"Search\" nav options are replaced with \"Filter\"</li>\r\n                                    <li>The grid performs the search upon first viewing rather than needing to press\r\n                                        some \"Search\" button first\r\n                                    </li>\r\n                                    <li>The grid has a refresh button on the top right</li>\r\n                                </ul>\r\n\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Value</dt>\r\n                            <dd className=\"col-sm-9\">boolean</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Default</dt>\r\n                            <dd className=\"col-sm-9\">false</dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*================================= Grid Section ======================================*/}\r\n                    <hr width={\"95%\"}/>\r\n                    <section id={\"reduxSetup\"}>\r\n                        <h5 style={{textAlign: \"left\", paddingLeft: 50, color: \"#63b4cf\"}}> Grid </h5>\r\n\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Redux Setup For Search\r\n                            Results </h6>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>reducerID</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">The sequence of properties that react-redux will use to pin-point\r\n                                the exact state to be used by the result grid in locating its row values\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">An array of strings</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {reducerIDSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchID</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies the ID to be used by react-redux in locating the result\r\n                                grid's rows, as well as saving them (see searchHandler below)\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">A string</dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {reducerSearchIDSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchHandler</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                The callback function where the user's input in the search fields are passed in after\r\n                                clicking \"Search\" or \"Filter\".\r\n                                <br/>\r\n                                Passes in the following parameters to the specified callback function:\r\n                                <ul>\r\n                                    <li><i>searchID</i>: same as searchID above</li>\r\n                                    <li><i>searchCriteria</i>: an object whose keys correspond to searchFormField's\r\n                                        keys, and values are as inputted by the user\r\n                                    </li>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">A callback function</dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*================================ Setting Up the Grid =====================================*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <section id={\"gridSetup\"}>\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Setting Up The Grid </h6>\r\n\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchGridColumns</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies the columns of the grid.</dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                an array of JSON objects whose properties are:\r\n                                <ul>\r\n                                    <li><i>name</i>: the key/id of the column used for mapping the row values to the\r\n                                        column\r\n                                    </li>\r\n                                    <li><i>title</i>: the label of the column</li>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchColumnSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>allowRowSelection</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Provides an ability to select rows in the grid.</dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a boolean where, if set to true, adds a checkbox to the left of the rows, and tracks the\r\n                                selected rows\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\">Default</dt>\r\n                            <dd className=\"col-sm-9\">false</dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>allowRowDetails</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Allows for rows to be collapsed to view additional details.</dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a boolean were, if set to true, it renders a chevron-right icon to the left of the row\r\n                                indicating it is collapsable for showing row details.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needs to Have</dt>\r\n                            <dd className=\"col-sm-9\"><i>rowDetailsContent</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Default</dt>\r\n                            <dd className=\"col-sm-9\">false</dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*=============================== Customizing the Grid =====================================*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <section id={\"gridCustomization\"}>\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Customizing the Grid</h6>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>rowDetailsContent</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">The content to display in the expanded row-details.</dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a hook callback. Passes in the collapsed row object which contains keys that correspond\r\n                                to searchGridColumns, and its values are its corresponding column value.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\" style={{color: \"red\"}}>Needed When</dt>\r\n                            <dd className=\"col-sm-9\"><i>rowDetailsContent == true</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Default</dt>\r\n                            <dd className=\"col-sm-9\">false</dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>tableCellConfig</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies how the table cells should be configured for displaying\r\n                                and interactions.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a JSON object whose keys correspond to those in searchGridColumns, and values are\r\n                                objects with the following keys:\r\n                                <ul>\r\n                                    <br/>\r\n                                    <li><b> action </b>: the type of action that the tableCell will have. Can be one of\r\n                                        the\r\n                                        following:\r\n                                    </li>\r\n                                    <ul>\r\n                                        <li><i>\"downloadFile\"</i> = fires the onClickHandler callback, which should\r\n                                            handle the\r\n                                            downloading of the file\r\n                                        </li>\r\n                                        <li><i>\"openDropdown\"</i> = renders a dropdown icon where, upon hovering with\r\n                                            the\r\n                                            cursor, shows a menu based on dropdownOption\r\n                                        </li>\r\n                                        <li><i>\"openPopup\"</i> = triggers a popup to open, and will fire the\r\n                                            popupContent\r\n                                            callback to get the content to be displayed inside the popup.\r\n                                        </li>\r\n                                        <li><i>\"transferTab\"</i> = if searchForm is rendered as a child of TabComponent,\r\n                                            and\r\n                                            the \"tabToOpen\" prop is specified, then clicking the tableCell will trigger\r\n                                            the TabComponent to open another tab whose key corresponds to targetTab\r\n                                        </li>\r\n                                    </ul>\r\n                                    <br/>\r\n                                    <li><b> onClickHandler </b>: a hook callback function that will handle the onClick\r\n                                        on the\r\n                                        table cell based on the action type selected. Passes in the following\r\n                                        parameters:\r\n                                    </li>\r\n                                    <ul>\r\n                                        <li><i>rowData</i> = the data of the whole row as an object whose keys\r\n                                            correspond to\r\n                                            searchGridColumns, and values are its corresponding column value\r\n                                        </li>\r\n                                        <li><i>resetCallback</i> = a callback function to be triggered by the hook\r\n                                            callback to\r\n                                            specify whenever the action performed is completed; this is important to get\r\n                                            called so that the table cell can be clicked again\r\n                                        </li>\r\n                                    </ul>\r\n                                    <br/>\r\n                                    <li> (if action is \"openPopup\") the following properties:</li>\r\n                                    <ul>\r\n                                        <li><b> popupHeader </b>: a string that is the title of the popup</li>\r\n                                        <li><b> popupClassName </b>: a string that is passed on as a classname for the\r\n                                            popup for\r\n                                            styling\r\n                                        </li>\r\n                                        <li><b> popupContent </b>: a hook callback function that will handle the\r\n                                            contents to\r\n                                            display inside the popup. Passed in the following parameters:\r\n                                        </li>\r\n                                        <ul>\r\n                                            <li><i>rowData</i> = the data of the whole row as an object whose keys\r\n                                                correspond\r\n                                                to searchGridColumns, and values are its corresponding column value\r\n                                            </li>\r\n                                            <li><i>resetCallback</i> = a callback function that can be used by the hook\r\n                                                callback function to specify whethe to close the popup, or (if the\r\n                                                SearchFormComponent is a child of TabComponent) to transfer tabs.\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ul>\r\n                                    <br/>\r\n                                    <li> (if action is \"openDropdown\") <b>dropdownOptions</b>: an array of objects whose\r\n                                        keys\r\n                                        contain the following properties:\r\n                                    </li>\r\n                                    <ul>\r\n                                        <li><i>key:</i> the key of the option</li>\r\n                                        <li><i>title:</i> the title/label to show for the option</li>\r\n                                        <li> (if desired) one of the following:</li>\r\n                                        <ul>\r\n                                            <li><i>image:</i> the file (.png, .gif, etc.) to show to the left of the\r\n                                                option\r\n                                                title\r\n                                            </li>\r\n                                            <li><i>icon:</i> the icon to show to the left of the option title; the icon\r\n                                                corresponds to the name value of the icon found here:\r\n                                                https://react.semantic-ui.com/elements/icon/\r\n                                            </li>\r\n                                        </ul>\r\n                                        <li><i>action:</i> a string of one of two values:</li>\r\n                                        <ul>\r\n                                            <li><i>\"downloadFile\"</i> = fires the callback function on the\r\n                                                onClickHandler\r\n                                                property found in the same dropdownOption object, NOT tableCellConfig's.\r\n                                                The onClickHandler should handle the downloading of the file.\r\n                                            </li>\r\n                                            <li><i>\"transferTab\"</i> = see previous \"transferTab\" description as it\r\n                                                executes\r\n                                                the same.\r\n                                            </li>\r\n\r\n                                        </ul>\r\n                                        <li><i>onClickHandler</i> = a hook callback function that passes in the\r\n                                            following\r\n                                            parameters for downloading files:\r\n                                        </li>\r\n                                        <ul>\r\n                                            <li><i>rowData</i> = the data of the whole row as an object whose keys\r\n                                                correspond\r\n                                                to searchGridColumns, and values are its corresponding column value\r\n                                            </li>\r\n                                            <li><i>resetCallback</i> = a callback function to be triggered by the hook\r\n                                                callback to specify whenever the action performed is completed; this is\r\n                                                important to get called so that the dropdown option will trigger the\r\n                                                download again\r\n                                            </li>\r\n                                        </ul>\r\n                                    </ul>\r\n\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchFormTableCellConfigSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchGridHiddenColumns</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies which columns to hide from the grid.</dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a string array whose elements corresponds to keys in searchGridColumns.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchGridHiddenColumnsSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n                    </section>\r\n\r\n                    {/*================================ Styling the Grid =====================================*/}\r\n                    <hr width={\"90%\"}/>\r\n\r\n                    <section id={\"gridStyling\"}>\r\n                        <h6 style={{textAlign: \"left\", paddingLeft: 100, color: \"gray\"}}> Styling The Grid </h6>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchGridColumnWidths</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies the widths that each column will span to.</dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a JSON object whose keys are the key/id of the column corresponding to\r\n                                searchGridColumns, and values (of number type) are the widths (in px)\r\n                                <ul>\r\n                                    <li>if unspecified, all columns will be of width 180px</li>\r\n                                    <li>if specified, but some columns are omitted, then omitted columns will be of\r\n                                        width 180px\r\n                                    </li>\r\n                                </ul>\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchGridColumnWidthsSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                        {/*-----Next Entry-----*/}\r\n                        <hr width={\"85%\"}/>\r\n                        <dl className=\"row\">\r\n                            <dt className=\"col-sm-3\">Name</dt>\r\n                            <dd className=\"col-sm-9\"><i>searchGridWidth</i></dd>\r\n\r\n                            <dt className=\"col-sm-3\">Description</dt>\r\n                            <dd className=\"col-sm-9\">Specifies the width that the grid will expand to. Going above this\r\n                                width (by expanding columns) will add horizontal scrollbars.\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\">Value</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                a string of CSS-supported width (px, em, %, etc.)\r\n                            </dd>\r\n\r\n                            <dt className=\"col-sm-3\"> Example</dt>\r\n                            <dd className=\"col-sm-9\">\r\n                                <section className={\"codeSample\"}>\r\n                                    <pre className=\"language-javascript\">\r\n                                        <code>\r\n                                            {searchGridWidthSampleCode}\r\n                                        </code>\r\n                                    </pre>\r\n                                </section>\r\n                            </dd>\r\n                        </dl>\r\n\r\n                    </section>\r\n                </div>\r\n\r\n                <ScrollUpButton showAtPosition={500}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchFormComponentInfo;","export const configFileSampleCode = `const searchFormConfigurations = {\r\n    searchFormFields: {\r\n        name: {label: \"Name\", type: \"text\"},\r\n        dateOfBirth: {label: \"Date of Birth\", type: \"date\"},\r\n        yearLevel: {\r\n            label: \"Year Level\",\r\n            type: {\r\n                dropdown: [\r\n                    {label: \"Freshman\", value: 1},\r\n                    {label: \"Sophomore\", value: 2},\r\n                    {label: \"Junior\", value: 3},\r\n                    {label: \"Senior\", value: 4},\r\n                ]\r\n            }\r\n        },\r\n    },\r\n    searchFormFieldsContainerWidth: '600px',\r\n\r\n    searchGridColumns: [\r\n        {name: \"studentID\", title: \"\"},\r\n        {name: \"name\", title: \"Name\"},\r\n        {name: \"dateOfBirth\", title: \"Date of Birth\"},\r\n        {name: \"yearLevel\", title: \"Year Level\"},\r\n        {name: \"attendanceHistory\", title: \"Attendance History\"},\r\n        {name: \"gradesDropdown\", title: \"Grades\"},\r\n        {name: \"transcript\", title: \"Transcript\"},\r\n        {name: \"activities\", title: \"Activities\"},\r\n    ],\r\n    searchGridHiddenColumns: [\"studentID\"],\r\n    searchGridWidth: '1280px',\r\n\r\n    tableCellConfig: {\r\n        transcript: {\r\n            action: \"downloadFile\",\r\n            onClickHandler: this.downloadTranscript\r\n        },\r\n        attendance: {\r\n            action: \"openPopup\",\r\n            popupHeader: \"Attendance History\",\r\n            popupContent: this.getAttendanceHistoryContent,\r\n            popupClassName: \"attendanceHistory\"\r\n        },\r\n        gradesDropdown: {\r\n            action: \"openDropdown\",\r\n            dropdownOptions: [\r\n                {\r\n                    key: \"viewCurrentGrades\",\r\n                    title: \"View Current Grades\",\r\n                    image: cross,\r\n                    action: \"transferTab\",\r\n                    targetTab: \"viewGradesTab\"\r\n                },\r\n                {\r\n                    key: \"getGradesReport\", title: \"Generate Grades Report\", image: pdf,\r\n                    action: \"downloadFile\",\r\n                    onClickHandler: this.generateGradesReport\r\n                },\r\n            ]\r\n        },\r\n        activities: {action: \"transferTab\", targetTab: \"View Student Activities\"}\r\n    }\r\n}\r\n`;\r\n\r\nexport const implementingComponentSampleCode = `<SearchFormComponent\r\n    //Required\r\n    config = {searchFormConfigurations}\r\n        \r\n    //Optional\r\n    tabToOpen = {this.openTab}\r\n/>    \r\n`;\r\n\r\nexport const searchFormFieldsCode = `searchFormFields: {\r\n    name: {label: \"Name\", type: \"text\"},\r\n    dateOfBirth: {label: \"Date of Birth\", type: \"date\"},\r\n    yearLevel: {\r\n        label: \"Year Level\",\r\n        type: {\r\n            dropdown: [\r\n                {label: \"Freshman\", value: 1},\r\n                {label: \"Sophomore\", value: 2},\r\n                {label: \"Junior\", value: 3},\r\n                {label: \"Senior\", value: 4}\r\n            ]\r\n        }\r\n    }\r\n}`;\r\n\r\nexport const searchFormDefaultSampleCode = `searchFormDefaultValues: {\r\n  collegeYear: 1\r\n}`;\r\n\r\nexport const searchFormColumnCountSampleCode = `searchFormFieldsColumnCount: 3`;\r\n\r\nexport const searchFormFieldContainerSampleCode = `searchFormFieldsContainerWidth: '630px'`\r\n\r\nexport const searchMenuOptionsSampleCode = `searchMenuOptions: [\r\n  {\r\n      key: \"generateStudent\", title: \"Generate Student Report\", image: pdf,\r\n      dependsOnRowSelection: true,\r\n      action: \"downloadFile\",\r\n      onClickHandler: this.generateStudentReport\r\n  }, \r\n  {\r\n      key: \"actions\", title: \"Actions\", image: actions,\r\n      subMenuItems: [\r\n          {\r\n              key: \"multipleStudentInfoUpdate\",\r\n              title: \"Multiple Student Info Update\",\r\n              image: batchAdd,\r\n              action: \"openPopup\",\r\n              popupHeader: \"Multiple Student Info Update\",\r\n              popupContent: this.getMultipleStudentInfoUpdateForm,\r\n              dependsOnRowSelection: true\r\n          },\r\n          {key: \"createNewStudent\", title: \"Create New Student\", image: create},\r\n          {key: \"deleteStudent\", title: \"Delete Student\", image: delete},\r\n          {\r\n              key: \"extracurricularActivities\",\r\n              title: \"Manage Extracurricular Activities\", image: manage,\r\n              subMenuItems: [\r\n                  {key: \"addNewActivity\", title: \"Add New Activity\", image: create},\r\n                  {key: \"deleteNewActivity\", title: \"Delete Activity\", image: delete},\r\n              ]\r\n          },\r\n      ]\r\n  }\r\n]`;\r\n\r\nexport const reducerIDSampleCode = `reducerID: [\"students\", \"info\"]`;\r\n\r\nexport const reducerSearchIDSampleCode = `searchID: \"studentID\"`;\r\n\r\nexport const searchColumnSampleCode = `searchGridColumns: [\r\n    {name: \"studentID\", title: \"\"},\r\n    {name: \"name\", title: \"Name\"},xx\r\n    {name: \"dateOfBirth\", title: \"Date of Birth\"},\r\n    {name: \"yearLevel\", title: \"Year Level\"},\r\n    {name: \"attendanceHistory\", title: \"Attendance History\"},\r\n    {name: \"gradesDropdown\", title: \"Grades\"},\r\n    {name: \"transcript\", title: \"Transcript\"},\r\n    {name: \"activities\", title: \"Activities\"},\r\n]`;\r\n\r\nexport const searchGridColumnWidthsSampleCode = `searchGridColumnWidths: {\r\n    //studentID is a hidden column so width is not needed\r\n    name: 250,\r\n    yearLevel: 50,\r\n    attendanceHistory: 100,\r\n    gradesDropdown: 50,\r\n    transcript: 100,\r\n    //dateOfBirth and activities defaults to 180\r\n}`;\r\n\r\nexport const searchGridHiddenColumnsSampleCode = `searchGridHiddenColumns: [\"studentID\"]`;\r\n\r\nexport const searchGridWidthSampleCode = `searchGridWidth: '1500px'`;\r\n\r\nexport const searchFormTableCellConfigSampleCode = `tableCellConfig: {\r\n    transcript: {\r\n        action: \"downloadFile\",\r\n        onClickHandler: this.downloadTranscript\r\n    },\r\n    attendance: {\r\n        action: \"openPopup\",\r\n        popupHeader: \"Attendance History\",\r\n        popupContent: this.getAttendanceHistoryContent,\r\n        popupClassName: \"attendanceHistory\"\r\n    },\r\n    gradesDropdown: {\r\n        action: \"openDropdown\",\r\n        dropdownOptions: [\r\n            {\r\n                key: \"viewCurrentGrades\",\r\n                title: \"View Current Grades\",\r\n                image: cross,\r\n                action: \"transferTab\",\r\n                targetTab: \"viewGradesTab\"\r\n            },\r\n            {\r\n                key: \"getGradesReport\", title: \"Generate Grades Report\", image: pdf,\r\n                action: \"downloadFile\",\r\n                onClickHandler: this.generateGradesReport\r\n            },\r\n        ]\r\n    },\r\n    activities: {action: \"transferTab\", targetTab: \"View Student Activities\"}\r\n}`;","import React, {Component} from 'react';\r\nimport FormFieldsComponentInfo from './info/FormFieldsComponentInfo';\r\nimport GridComponentInfo from './info/GridComponentInfo';\r\nimport PopUpComponentInfo from './info/PopUpComponentInfo';\r\nimport MaskComponentInfo from './info/MaskComponentInfo';\r\nimport FileUploadComponentInfo from './info/FileUploadComponentInfo';\r\nimport LoaderComponentInfo from \"./info/LoaderComponentInfo\";\r\nimport SearchFormComponentInfo from \"./info/SearchFormComponentInfo\";\r\n\r\nimport {Navbar, NavDropdown, Nav, Image,} from 'react-bootstrap';\r\nimport '../styling/MainComponent.css';\r\nimport 'aos/dist/aos.css';\r\nimport AOS from \"aos\";\r\nimport Prism from \"prismjs\";\r\nimport \"../styling/prism.css\"\r\nimport {Icon} from \"semantic-ui-react\";\r\nimport {Switch} from \"antd\";\r\n\r\nclass MainComponent extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        let darkMode;\r\n        if (localStorage.getItem(\"isDarkMode\") === \"true\")\r\n            darkMode = true;\r\n\r\n        this.state = {\r\n            darkMode,\r\n            copySuccess:\"\"\r\n        };\r\n\r\n        this.handleSelection = this.handleSelection.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);\r\n        this.setDarkModeToLocalStorage = this.setDarkModeToLocalStorage.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        Prism.highlightAll();\r\n    }\r\n\r\n    handleSelection(e){\r\n        this.setState({\r\n          selection: e.target.id\r\n        })\r\n    }\r\n\r\n    copyToClipboard = (e) => {\r\n        this.textArea.select();\r\n        document.execCommand('copy');\r\n        e.target.focus();\r\n        this.setState({\r\n            copySuccess: \"Copied!\"\r\n        })\r\n    };\r\n\r\n    setDarkModeToLocalStorage() {\r\n        const {darkMode} = this.state;\r\n        localStorage.setItem('isDarkMode', darkMode === true ? \"true\" : \"false\");\r\n    }\r\n\r\n\r\n    render(){\r\n        const {selection, darkMode} = this.state;\r\n\r\n        AOS.init();\r\n\r\n        let mainComponent;\r\n        switch (selection) {\r\n            case \"form-fields-component\":\r\n                window.scrollTo(0,0);\r\n                mainComponent = <FormFieldsComponentInfo />;\r\n                break;\r\n            case \"grid-component\":\r\n                window.scrollTo(0,0);\r\n                mainComponent = <GridComponentInfo />;\r\n                break;\r\n            case \"loader-component\":\r\n                window.scrollTo(0,0);\r\n                mainComponent = <LoaderComponentInfo />;\r\n                break;\r\n            case \"mask-component\":\r\n                window.scrollTo(0,0);\r\n                mainComponent = <MaskComponentInfo />;\r\n                break;\r\n            case \"popup-component\":\r\n                window.scrollTo(0,0);\r\n                mainComponent = <PopUpComponentInfo />;\r\n                break;\r\n            case \"search-component\":\r\n                window.scrollTo(0,0);\r\n                mainComponent = <SearchFormComponentInfo />;\r\n                break;\r\n            case \"file-component\":\r\n            default:\r\n                window.scrollTo(0,0);\r\n                mainComponent = <FileUploadComponentInfo />;\r\n                // mainComponent = <SearchFormComponentInfo />;\r\n                break;\r\n        }\r\n\r\n        let availHeight = window.screen.availHeight;\r\n        let availWidth = window.screen.availWidth;\r\n\r\n        let style = {};\r\n        if (darkMode === true)\r\n            style = {backgroundColor: \"#222222\", color: \"white\"};\r\n\r\n        return(\r\n            <div style={{\r\n                height: availHeight,\r\n                width: availWidth,\r\n            }}>\r\n                <Navbar sticky=\"top\" collapseOnSelect expand =\"lg\" bg=\"dark\" variant=\"dark\">\r\n                    <Navbar.Brand> <Image src={\"logo.png\"} style={{marginBottom: \"4px\", marginRight: \"4px\"}}/> React Wiki </Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <NavDropdown id=\"nav-dropdown\" title = \"Components\">\r\n                                <NavDropdown.Item id='file-component' onClick = {this.handleSelection}> File Upload Component </NavDropdown.Item>\r\n                                <NavDropdown.Item id='form-fields-component' onClick = {this.handleSelection}> Form Fields Component </NavDropdown.Item>\r\n                                <NavDropdown.Item id=\"grid-component\" onClick = {this.handleSelection} > Grid Component </NavDropdown.Item>\r\n                                <NavDropdown.Item id='loader-component' onClick = {this.handleSelection}> Loader Component </NavDropdown.Item>\r\n                                <NavDropdown.Item id='mask-component' onClick = {this.handleSelection}> Mask Component </NavDropdown.Item>\r\n                                <NavDropdown.Item id='popup-component' onClick = {this.handleSelection}> Popup Component </NavDropdown.Item>\r\n                                <NavDropdown.Item id='search-component' onClick = {this.handleSelection}> Search Form Component </NavDropdown.Item>\r\n                            </NavDropdown>\r\n                            <Nav.Link href={\"./reactComponents.zip\"}> Get Package </Nav.Link>\r\n                        </Nav>\r\n\r\n                        <div style={{padding: \".5rem 1rem\"}}>\r\n                            <span className={\"darkModeLabel\"}> Dark Mode: &nbsp;</span>\r\n                            <Switch\r\n                                checkedChildren={<Icon name='moon'/>}\r\n                                unCheckedChildren={<Icon name='sun' inverted/>}\r\n                                checked={darkMode}\r\n                                onChange={() => this.setState({\r\n                                    darkMode: !darkMode\r\n                                }, this.setDarkModeToLocalStorage)}\r\n                            />\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n\r\n                <div style={{...style}} className={darkMode === true ? \"darkMode\" : \"\"}>\r\n                    {mainComponent}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainComponent;","import React from 'react';\r\nimport './styling/App.css';\r\nimport MainComponent from \"./components/MainComponent\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <MainComponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styling/index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}