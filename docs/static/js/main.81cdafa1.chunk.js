(this.webpackJsonpreact_docs=this.webpackJsonpreact_docs||[]).push([[0],{155:function(e,t,s){},161:function(e,t,s){},163:function(e,t,s){},164:function(e,t,s){},171:function(e,t,s){},174:function(e,t,s){"use strict";s.r(t);var c=s(1),l=s.n(c),a=s(25),n=s.n(a),i=(s(155),s(107)),r=s(20),o=s(21),d=s(70),h=s(24),j=s(22),p=(s(55),s(30)),b=s(19),m=s.n(b),x=s(0),u=function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"render",value:function(){return Object(x.jsxs)("div",{children:[Object(x.jsxs)("div",{children:[Object(x.jsx)("h1",{className:"display-4",style:{textAlign:"center"},children:"Form Fields Component"}),Object(x.jsxs)("section",{"data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Glossary "}),Object(x.jsx)("div",{style:{textAlign:"left",paddingLeft:30},children:Object(x.jsxs)("ol",{children:[Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#implementation",children:"Sample Implementation"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#api",children:"Props"})})]})})]}),Object(x.jsxs)("section",{id:"implementation","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Sample Implementation "}),Object(x.jsx)("section",{className:"codeSampleImplementation",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'<FormFieldsComponent\n    //Required Ones\n    formFields = {\n        name: {label: "Name", type: "text"},\n        dateOfBirth: {label: "Date of Birth", type: "date"},\n        collegeYear: {\n            label: "College Year",\n            type: {\n                dropdown: [\n                    {label: "Freshman", value: 1}\n                    {label: "Sophomore", value: 2}\n                    {label: "Junior", value: 3}\n                    {label: "Senior", value: 4}\n                ]\n            }\n        },\n        studentID: {\n            label: "Student ID",\n            type: {\n                lookupValue: {\n                    searchFormFields: {\n                        name: {label: "Name", type: "text"},\n                        dateOfBirth: {label: "Date of Birth", type: "date"},\n                    },\n                    searchGridColumns: {\n                         {name: "studentID", title: ""},\n                         {name: "name", title: "Name"},\n                         {name: "dateOfBirth", title: "Date of Birth"},\n                    },\n                    additionalFieldsToPopulate: ["name", "dateOfBirth"],\n                    \n                    reducerID: ["students", "info"],\n                    searchID: "studentID",\n                    searchHandler: this.getStudentSearchResults,\n                    \n                    popupClassName: "studentSearchLookupPopup"\n                }\n            }\n        }\n    },\n    formFieldsData = {\n        name: "John",\n        dateOfBirth: "11/19/1983",\n        collegeYear: "1",\n        extracurricularActivities: ["baseball", "soccer", "chess"]\n    },\n    handlerFunction={this.state.handleFormFieldValue},\n\n    //Optional Ones\n    requiredFields = {["Name", "Date of Birth"]},\n    columnCount={3},\n    fieldContainerWidth = {\'630px\'}\n    formClassName={\'studentInfo\'}\n/>\n'})})})]}),Object(x.jsx)("hr",{}),Object(x.jsxs)("section",{id:"api","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Props "}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Required "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" formFields"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The list of form fields to be generated."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:[Object(x.jsx)("p",{children:' A JSON object whose keys are the key/id for the fields, and values are objects with properties "label" and "type". They follow the given format: '}),Object(x.jsxs)("p",{style:{marginLeft:"40px"},children:["<",Object(x.jsx)("i",{children:"key/id of field"}),">: { label: <",Object(x.jsx)("i",{children:"label"}),">, type: <",Object(x.jsx)("i",{children:"type of field"}),"> }"]}),Object(x.jsx)("p",{children:"The different types supported are:"}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"number"'})," = restricts input to number only"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"double"'})," = restricts input to double only (<number>.<digits only>); will append decimal if it is missing from the user's input."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"date"'}),' = shows a datepicker, and saves the selection in "mm/dd/yyyy" format']}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"text"'})," = allows any input"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"textarea"'})," = shows a textarea that allows for any input"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"boolean"'}),' = shows a dropdown field with two options: "Yes" or "No", whose values are boolean "true" and "false", respectively.']}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"data"'})," = does not render an input field; only displays data"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"multilineData"'})," = same as above, but shows a button which, upon clicking, opens a popup that shows the multi-line data; if value is empty, then the button is not shown."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"currencyData"'})," = converts a double value (not a string) to currency format, along with dollar sign ($)"]}),Object(x.jsxs)("li",{children:[Object(x.jsxs)("b",{children:["{dropdown: < ",Object(x.jsx)("i",{children:"dropdown values"})," >}"]})," = displays a select field",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"dropdown values"})," can be one of the following"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["an array of objects in this format:",Object(x.jsx)("ul",{children:Object(x.jsx)("li",{children:"{label: <label>, value: <value>, color: <color>}"})})]}),Object(x.jsx)("li",{children:"a hook callback function that handles the asynchronous retrieval of dropdown options, and returns a <Select/> object"})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:["There are three optional properties available for added features:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"menuWidth"'})," = the width that the dropdown options will expand to. Ideally, this property should be set wide enough where the options are readable in one line. By default, the width expands to the same width as the select field."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"multiselect"'})," = boolean that allows for multiple selection of values; is false by default if unspecified"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"isClearable"'}),' = boolean that allows for the "x" symbol to appear on the select box allowing it to be clearable upon button click; is false by default']})]})]})]})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsxs)("b",{children:["{lookupValue: { ",Object(x.jsx)("i",{children:"specified properties"})," }}"]})," = displays a text field with a green search button to its right that triggers a lookup popup to show. The popup contains a SearchFormComponent for looking up a value, and will pre-populate the FormComponent's field once a selection is made from the popup.",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"specified properties"})," is a JSON object that includes the following properties:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"searchFormFields"})," = similar to SearchFormComponent/searchFormFields"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"searchGridColumns"})," = similar to SearchFormComponent/searchGridColumns"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"reducerID"})," = similar to SearchFormComponent/reducerID"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"searchID"})," = similar to SearchFormComponent/searchID"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"searchHandler"})," = similar to SearchFormComponent/searchHandler"]})]})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:["There are three optional properties available for added features:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"additionalFieldsToPopulate"})," = an string array whose elements correspond to the keys of the ",Object(x.jsx)("i",{children:"formFields"})," object. When a selection is made from the lookup popup result grid, these additional fields will be populated based on the selected row data."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"popupClassName"})," = the CSS classname for this popup. It can be used to alter its width, and other CSS-related styling."]})]})]})]})]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'formFields = {\n    name: {label: "Name", type: "text"},\n    dateOfBirth: {label: "Date of Birth", type: "date"},\n    collegeYear: {\n        label: "College Year",\n        type: {\n            dropdown: [\n                {label: "Freshman", value: 1}\n                {label: "Sophomore", value: 2}\n                {label: "Junior", value: 3}\n                {label: "Senior", value: 4}\n            ]\n        }\n    },\n    studentID: {\n        label: "Student ID",\n        type: {\n            lookupValue: {\n                searchFormFields: {\n                    name: {label: "Name", type: "text"},\n                    dateOfBirth: {label: "Date of Birth", type: "date"},\n                },\n                searchGridColumns: {\n                     {name: "studentID", title: ""},\n                     {name: "name", title: "Name"},\n                     {name: "dateOfBirth", title: "Date of Birth"},\n                },\n                additionalFieldsToPopulate: ["name", "dateOfBirth"],\n                \n                reducerID: ["students", "info"],\n                searchID: "studentID",\n                searchHandler: this.getStudentSearchResults,\n                \n                popupClassName: "studentSearchLookupPopup"\n            }\n        }\n    }\n}'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" formFieldsData"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The current values for each form field."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A JSON object whose keys correspond to keys/ids of formFields, and values are the current values for those fields."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'formFieldsData = {\n    name: "John",\n    dateOfBirth: "11/19/1983",\n    collegeYear: 1,\n    extracurricularActivities: ["baseball", "soccer", "chess"]\n}'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" handlerFunction"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:[Object(x.jsx)("p",{children:"The callback function where the user's input are passed in as they revise a field. Must have the following parameters for proper flow: "}),Object(x.jsx)("p",{style:{marginLeft:"40px"},children:" (e, {name, value}) "}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"e"})," is the event object"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"name"})," corresponds to the key of the form field"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"value"})," is the user's input."]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A callback function"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"handlerFunction={this.state.handleFormFieldValue}"})})})})]}),Object(x.jsx)("hr",{width:"95%"}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Additional Customizations "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" requiredFields"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" Specifies which fields to add a red asterisk (*) after the form label to indicate a required field."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" An array of strings where each string corresponds to a key/id in formFields."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'requiredFields = {["Name", "Date of Birth"]}'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" onFormSubmit"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:'The function that gets called whenever the user submits the form by clicking "Enter".'}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"A callback function"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" columnCount"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the number of columns to divide the formFields."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A number of either 2, 3, or 4."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" 2"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" fieldContainerWidth"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the width to span the form fields by."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string that can either be some length unit (px, cm, etc.), percentage (%), or any CSS-supported width value."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"fieldContainerWidth = {'630px'}"})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" formClassName"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies a CSS class to wrap the FormFieldsComponent by for external CSS styling."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string"})]})]})]}),Object(x.jsx)(p.CircleArrow,{showAtPosition:500})]})}}]),s}(c.Component),O=s(200),g=function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"render",value:function(){return Object(x.jsxs)("div",{children:[Object(x.jsx)("h1",{className:"display-4",style:{textAlign:"center"},children:"Popup Component"}),Object(x.jsxs)("section",{"data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Glossary "}),Object(x.jsx)("div",{style:{textAlign:"left",paddingLeft:30},children:Object(x.jsxs)("ol",{children:[Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#configs",children:"Available Configurations"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#implementation",children:"Sample Implementation"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#props",children:"Props"})})]})})]}),Object(x.jsxs)("section",{id:"configs","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Available Configurations "}),Object(x.jsxs)(O.a,{interval:null,children:[Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./closeOnly.png",alt:"Render for closeOnly"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"footerConfig"}),' = "closeOnly"']}),Object(x.jsx)("p",{children:"Displays only a close button."})]})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./submit.png",alt:"Render for simple"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"footerConfig"}),' = "submit"']}),Object(x.jsx)("p",{children:"Displays a submit button along with a close button."})]})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./popupall.png",alt:"Render for search"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"footerConfig"}),' = "all"']}),Object(x.jsx)("p",{children:"Displays the close, reset, and submit buttons (ideal for forms)."})]})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./custom.png",alt:"Render for all"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"footerConfig"}),' = "custom"']}),Object(x.jsx)("p",{children:"You can define what appears on the footer section."})]})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./formInside.png",alt:"Render for all with a form as the content"}),Object(x.jsx)(O.a.Caption,{children:Object(x.jsx)("h4",{children:"You can utilize the content portion of the popup to have another component."})})]})]})]}),Object(x.jsxs)("section",{id:"implementation","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Sample Implementation "}),Object(x.jsx)("section",{className:"codeSampleImplementation",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:f})})})]}),Object(x.jsxs)("section",{id:"props","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Props "}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Required "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" header"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The title of the popup."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" content"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The content of the popup. PopupComponent offers flexibility on the content, such as placing another component (ex. FormComponent) inside."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string, or another component. "})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" show"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" Whether to show the popup or not."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"boolean"}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"false"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" closeToggled"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"This property uses the supplied callback function to close the popup component. Ideally, the callback function should set the state of showing the popup to false."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"A callback function"})]}),Object(x.jsx)("hr",{width:"95%"}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Additional Customizations "}),Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Footer Configurations "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" footerConfig"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"The buttons to appear at the foot of the popup."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:[Object(x.jsx)("p",{children:"A string of either"}),Object(x.jsx)("p",{children:"i. \u201ccustom\u201d = giving the developer the option to define their own buttons in the footer"}),Object(x.jsx)("p",{children:"ii. \u201ccloseOnly\u201d = renders only a close button to close the popup."}),Object(x.jsx)("p",{children:"iii. \u201csubmit\u201d = renders a close button as well as submit button."}),Object(x.jsx)("p",{children:"iv. \u201call\u201d = renders a close, reset, & submit button. Ideal for forms"})]}),Object(x.jsx)("dt",{className:"col-sm-3",style:{color:"red"},children:"Needs to Have"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:[Object(x.jsx)("i",{children:"customFooter"})," when ",Object(x.jsx)("i",{children:'footerConfig = "custom"'})]})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"customFooter"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"A custom set of buttons to appear at the bottom of the popup."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"A set of <Button/> elements wrapped by <Modal.Footer/> element from the React-Bootstrap library"}),Object(x.jsx)("dt",{className:"col-sm-3",style:{color:"red"},children:"Needed When"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:'footerConfig = "custom"'})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" resetToggled"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" When \u201cfooterConfig\u201d is set to \u201call\u201d, this must be included to respond to the user's desire to reset what's placed in the content body."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A callback function"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" submitToggled"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"When \u201cfooterConfig\u201d is set to \u201call\u201d or \u201csubmit\u201d, this must be included to respond to the user's desire to submit what's placed in the content body."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A callback function"})]}),Object(x.jsx)("hr",{width:"90%"}),Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Styling "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" hasBodyPadding"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Whether to add default paddings on the body of the popup."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"boolean"}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"false"})]})]}),Object(x.jsx)(p.CircleArrow,{showAtPosition:500})]})}}]),s}(c.Component),f='<PopupComponent \n    //Required Ones \n    header={"Title"}\n    content={"Message here"}\n    footerConfig={"all"}\n    closeToggled={this.closePopup}\n    \n    //Optional One \n    resetToggled={this.handleReset} \n    submitToggled={this.handleSubmit} \n/>',y=g,w=function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"render",value:function(){return Object(x.jsxs)("div",{children:[Object(x.jsx)("h1",{className:"display-4",style:{textAlign:"center"},children:"Mask Component"}),Object(x.jsxs)("section",{"data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Glossary "}),Object(x.jsx)("div",{style:{textAlign:"left",paddingLeft:30},children:Object(x.jsxs)("ol",{children:[Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#demo",children:"Demonstration"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#implementation",children:"Sample Implementation"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#props",children:"Props"})})]})})]}),Object(x.jsxs)("section",{id:"demo","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Demonstration "}),Object(x.jsx)("img",{src:"./maskcomponent.gif",alt:"Clip demonstrating the loader component overlaying a grid.",style:{minWidth:"50vw",maxWidth:"80vw"}})]}),Object(x.jsxs)("section",{id:"implementation","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Sample Implementation "}),Object(x.jsx)("section",{className:"codeSampleImplementation",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:N})})})]}),Object(x.jsxs)("section",{id:"props","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Props "}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Required "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" header"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The title of the popup."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" content"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The message to appear in the mask popup."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" show"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Toggles whether to show the mask or not."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A boolean"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Note"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"It's ideal to assign a parent's state property here to toggle when to show the mask or not"})]}),Object(x.jsx)("hr",{width:"95%"}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Additional Customization "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" loadingIcon"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" Toggles whether to show a rotating loading icon in the content."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Values"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A boolean"})]})]}),Object(x.jsx)(p.CircleArrow,{showAtPosition:500})]})}}]),s}(c.Component),N='<MaskComponent \n    //Required Ones \n    header={"Please Wait"}\n    content={"Loading"}\n    show={this.state.toggleShow}\n    \n    //Optional One \n    loadingIcon={true} \n/>',v=w,C=function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"render",value:function(){return Object(x.jsxs)("div",{children:[Object(x.jsx)("h1",{className:"display-4",style:{textAlign:"center"},children:"Loader Component"}),Object(x.jsxs)("section",{"data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Glossary "}),Object(x.jsx)("div",{style:{textAlign:"left",paddingLeft:30},children:Object(x.jsxs)("ol",{children:[Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#demo",children:" Available Configurations "})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#implementation",children:"Sample Implementation"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#props",children:"Props"})})]})})]}),Object(x.jsxs)("section",{id:"demo","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:"  Available Configurations  "}),Object(x.jsxs)(O.a,{interval:null,children:[Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./loader.gif",alt:"Code for rendering form"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsx)("h3",{children:"Default appearance"}),Object(x.jsx)("p",{children:"This is how the LoaderComponent appears with inverted not being specified. "})]})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{src:"./loaderInverted.gif",alt:"Code for rendering form"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"inverted"})," = false"]}),Object(x.jsx)("p",{children:"You can set the LoaderComponent to have a dark background."})]})]})]})]}),Object(x.jsxs)("section",{id:"implementation","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Sample Implementation "}),Object(x.jsx)("section",{className:"codeSampleImplementation",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:k})})})]}),Object(x.jsxs)("section",{id:"props","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("hr",{}),Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Props "}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Required "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" isLoading"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" Determines if the content needs to be overlayed."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A boolean"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" content"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The content to be overlayed."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" An object"})]}),Object(x.jsx)("hr",{width:"95%"}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Additional Customization "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" loadingMessage"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" What message to appear at the center of the overlay."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A string"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:" Name"}),Object(x.jsx)("dd",{className:"col-sm-9",style:{fontStyle:"italic"},children:" inverted"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" Whether to invert the background color of the overlay."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" true"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" A boolean"})]})]}),Object(x.jsx)(p.CircleArrow,{showAtPosition:500})]})}}]),s}(c.Component),k='<LoaderComponent\n//Required Ones \nisLoading={this.state.isLoadingGrid}\ncontent={gridComponentVariable}\n\n//Optional Ones \nloadingMessage={"Loading..."}\ninverted={false}\n/>',S=C,D='popupCallback("closePopup");',A='popupCallback("closePopup", true);',I='popupCallback("transferTab", <target tab\'s key>, <data to pass>);',T=function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(){return Object(r.a)(this,s),t.apply(this,arguments)}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"render",value:function(){return Object(x.jsxs)("div",{children:[Object(x.jsxs)("div",{children:[Object(x.jsx)("h1",{className:"display-4",style:{textAlign:"center"},children:"Search Form Component"}),Object(x.jsxs)("section",{"data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Glossary "}),Object(x.jsx)("div",{style:{textAlign:"left",paddingLeft:30},children:Object(x.jsxs)("ol",{children:[Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#implementation",children:"How-To Implement"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#sample-implementation",children:"Sample Implemention"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#api",children:"Props"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#configProps",children:"Configuration Props"})}),Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#configProps",children:"Setting Up The Fields"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#customizingFields",children:"Customizing The Fields"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#fieldNavBar",children:"Navigation Bar"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#alternateSetup",children:"Alternate Setup"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#reduxSetup",children:"Redux Setup For Search Results"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#gridSetup",children:"Setting Up The Grid"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#gridCustomization",children:"Customizing the Grid"})}),Object(x.jsx)("li",{children:Object(x.jsx)("a",{className:"nav-link glossary",href:"#gridStyling",children:"Styling The Grid"})})]})]})})]}),Object(x.jsx)("hr",{}),Object(x.jsxs)("section",{id:"implementation","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" How-To Implement "}),Object(x.jsx)("p",{style:{textAlign:"left",paddingLeft:70},children:" 1. Create the configuration constant and add all necessary properties. "}),Object(x.jsx)("section",{className:"codeSampleImplementation",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'const searchFormConfigurations = {\n    searchFormFields: {\n        name: {label: "Name", type: "text"},\n        dateOfBirth: {label: "Date of Birth", type: "date"},\n        yearLevel: {\n            label: "Year Level",\n            type: {\n                dropdown: [\n                    {label: "Freshman", value: 1},\n                    {label: "Sophomore", value: 2},\n                    {label: "Junior", value: 3},\n                    {label: "Senior", value: 4},\n                ]\n            }\n        },\n    },\n    searchFormFieldsContainerWidth: \'600px\',\n\n    searchGridColumns: [\n        {name: "studentID", title: ""},\n        {name: "name", title: "Name"},\n        {name: "dateOfBirth", title: "Date of Birth"},\n        {name: "yearLevel", title: "Year Level"},\n        {name: "attendanceHistory", title: "Attendance History"},\n        {name: "gradesDropdown", title: "Grades"},\n        {name: "transcript", title: "Transcript"},\n        {name: "activities", title: "Activities"},\n    ],\n    searchGridHiddenColumns: ["studentID"],\n    searchGridWidth: \'1280px\',\n\n    tableCellConfig: {\n        transcript: {\n            action: "downloadFile",\n            onClickHandler: this.downloadTranscript\n        },\n        attendance: {\n            action: "openPopup",\n            popupHeader: "Attendance History",\n            popupContent: this.getAttendanceHistoryContent,\n            popupClassName: "attendanceHistory"\n        },\n        gradesDropdown: {\n            action: "openDropdown",\n            dropdownOptions: [\n                {\n                    key: "viewCurrentGrades",\n                    title: "View Current Grades",\n                    image: cross,\n                    action: "transferTab",\n                    targetTab: "viewGradesTab"\n                },\n                {\n                    key: "getGradesReport", title: "Generate Grades Report", image: pdf,\n                    action: "downloadFile",\n                    onClickHandler: this.generateGradesReport\n                },\n            ]\n        },\n        activities: {action: "transferTab", targetTab: "View Student Activities"}\n    }\n}\n'})})}),Object(x.jsx)("p",{style:{textAlign:"left",paddingLeft:70},children:" 2. Create SearchFormComponent passing in the configuration file. If SearchFormComponent is a child of tab component, and you want it to be able to open another tab, add a handler for opening another tab. "}),Object(x.jsx)("section",{className:"codeSampleImplementation",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"<SearchFormComponent\n    //Required\n    config = {searchFormConfigurations}\n        \n    //Optional\n    tabToOpen = {this.openTab}\n/>    \n"})})})]}),Object(x.jsx)("hr",{}),Object(x.jsxs)("section",{id:"sample-implementation","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Sample Configurations "}),Object(x.jsxs)(O.a,{interval:null,children:[Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{className:"d-block w-100",src:"./searchForm-regular-sample.png",alt:"Render for regular search form view"}),Object(x.jsx)(O.a.Caption,{children:Object(x.jsx)("h3",{children:"Standard View Based on Config"})})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{className:"d-block w-100",src:"./searchForm-isMetrics-sample.png",alt:"Render for search form where isMetrics === true"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"isMetrics"})," === true"]}),Object(x.jsx)("p",{children:"Grid loads data upon load, refresh available, filtering results available."})]})]}),Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{className:"d-block w-100",src:"./searchForm-isMetrics-noNav-sample.png",alt:"Render for search form where hasNav === false"}),Object(x.jsxs)(O.a.Caption,{children:[Object(x.jsxs)("h3",{children:[Object(x.jsx)("i",{children:"hasNav"})," === false"]}),Object(x.jsx)("p",{children:"Navigation bar does not get rendered."})]})]})]})]}),Object(x.jsx)("hr",{}),Object(x.jsxs)("section",{id:"api","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" APIs "}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Required "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"config"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" The configuration file that the component will use for rendering."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" an array of JSON objects whose keys corresponds to the columns prop."})]}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Optional "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"tabToOpen"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" If SearchFormComponent is a child of TabComponent, then SearchFormComponent uses this callback function to request a tab switch. If the tab switch request comes from selected row(s), or a table cell click, then it will pass these values to the callback."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:" a callback function prop."})]})]}),Object(x.jsx)("hr",{}),Object(x.jsxs)("section",{id:"configProps","data-aos":"fade-right","data-aos-delay":"300",children:[Object(x.jsx)("h3",{style:{textAlign:"left",paddingLeft:50},children:" Configuration Props "}),Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Form Fields "}),Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Setting Up The Fields "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchFormFields"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"The list of search form fields to be generated."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:[Object(x.jsx)("p",{children:' A JSON object whose keys are the key/id for the fields, and values are objects with properties "label" and "type". They follow the given format: '}),Object(x.jsxs)("p",{style:{marginLeft:"40px"},children:["<",Object(x.jsx)("i",{children:"key/id of field"}),">: { label: <",Object(x.jsx)("i",{children:"label"}),">, type: <",Object(x.jsx)("i",{children:"type of field"}),"> }"]}),Object(x.jsx)("p",{children:"The different types supported are:"}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"number"'})," = restricts input to number only"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"double"'})," = restricts input to double only (<number>.<digits only>); will append decimal if it is missing from the user's input."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"date"'}),' = shows a datepicker, and saves the selection in "mm/dd/yyyy" format']}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"text"'})," = allows any input"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"textarea"'})," = shows a textarea that allows for any input"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"data"'})," = does not render an input field; only displays data"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"multilineData"'})," = same as above, but shows a button which, upon clicking, opens a popup that shows the multi-line data; if value is empty, then the button is not shown."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"currencyData"'})," = converts a double value (not a string) to currency format, along with dollar sign ($)"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"{dropdown: <dropdown values>}"})," = displays a select field",Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:"dropdown values can be one of the following"}),Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:"an array of objects in this format:"}),Object(x.jsx)("p",{style:{marginLeft:"60px"},children:"{label: <label>, value: <value>, color: <color>}"}),Object(x.jsx)("li",{children:"a hook callback function that handles the asynchronous retrieval of dropdown options, and returns a <Select/> object"})]}),Object(x.jsxs)("li",{children:["There are three optional properties available for added features:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"menuWidth"'})," = the width that the dropdown options will expand to. Ideally, this property should be set wide enough where the options are readable in one line. By default, the width expands to the same width as the select field."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"multiselect"'})," = boolean that allows for multiple selection of values; is false by default if unspecified"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:'"isClearable"'}),' = boolean that allows for the "x" symbol to appear on the select box allowing it to be clearable upon button click; is false by default']})]})]})]})]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'searchFormFields: {\n    name: {label: "Name", type: "text"},\n    dateOfBirth: {label: "Date of Birth", type: "date"},\n    yearLevel: {\n        label: "Year Level",\n        type: {\n            dropdown: [\n                {label: "Freshman", value: 1},\n                {label: "Sophomore", value: 2},\n                {label: "Junior", value: 3},\n                {label: "Senior", value: 4}\n            ]\n        }\n    }\n}'})})})})]})]}),Object(x.jsxs)("section",{id:"customizingFields",children:[Object(x.jsx)("hr",{width:"90%"}),Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Customizing The Fields "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchFormDefaultValues"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the default value for certain form fields."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a JSON an object whose keys correspond to keys in searchFormFields, and whose values are as specified by the developer to be the default values of those specified fields."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"searchFormDefaultValues: {\n  collegeYear: 1\n}"})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchFormFieldsColumnCount"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:["Specifies the number of columns that the form fields will span to.",Object(x.jsx)("ul",{children:Object(x.jsx)("li",{children:"Supports values 2, 3, and 4"})})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"number"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"2"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"searchFormFieldsColumnCount: 3"})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchFormFieldsContainerWidth"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the width that the search form fields will expand to."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a CSS-supported width value (px, %, etc.)"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"searchFormFieldsContainerWidth: '630px'"})})})})]})]}),Object(x.jsx)("hr",{width:"90%"}),Object(x.jsxs)("section",{id:"fieldNavBar",children:[Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Navigation Bar "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"hasNavOptions"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies whether to display the nav options bar"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"boolean"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"true"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchMenuOptions"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies additional nav menu options besides performing search, or resetting the fields"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:["an array of JSON objects whose properties are listed below:",Object(x.jsxs)("ul",{children:[Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" key:"})," the key of the option. This is internally used for mapping the selected nav option with its onClickHandler."]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" title:"})," the title/label to show for the option"]}),Object(x.jsx)("br",{}),Object(x.jsx)("li",{children:"(if desired) one of the following:"}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" image:"})," the file (.png, .gif, etc.) to show to the left of the option title"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" icon:"})," the icon to show to the left of the option title; the icon corresponds to the name value of the icon found here: https://react.semantic-ui.com/elements/icon/"]})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" dependsOnRowSelection:"})," boolean where, if allowRowSelection is set to true, then the row(s) data selected will be passed on to the onClickHandler function; if no selections are made before the user toggled this option, then an alert message will appear telling the user to make row selection(s) first."]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" action:"})," a string that specifies the action. Can be one of the following listed below ",Object(x.jsx)("b",{children:"OR"})," ",Object(x.jsx)("u",{children:"can be omitted if onClickHandler just needs to get called."})]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:' "downloadFile" '}),"= fires the callback function on the onClickHandler property. The onClickHandler should handle the downloading of the file."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:' "openPopup" '}),"= triggers a popup to open, and will fire the popupContent callback to get the content to be displayed inside the popup."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:' "confirmAction" '}),'= triggers a confirmation popup to open where a specified confirmationMessage will be shown as the message. If the user clicks "Yes", then it will fire the ',Object(x.jsx)("i",{children:"confirmationCallback"})," function to proceed with their intended action."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:' "renderCustomContent" '}),"= allows the developer to render their own content. Fires the function in the ",Object(x.jsx)("i",{children:"renderedCustomContent"})," prop.",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:["This accommodates for scenarios where, if ",Object(x.jsx)("i",{children:"dependsOnRowSelection"})," is set to true, the developer can validate the passed rows first, then show a warning message if needed, or proceed to display the PopupComponent with their true intended content."]})})]})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:['(if action is set to "downloadFile", or is omitted) ',Object(x.jsx)("b",{children:" onClickHandler "}),"= a hook callback function."]}),Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:"If dependsOnRowSelection is set to true, then it passes in the following as the first parameter:"}),Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" rowsArray "}),"= an array of row objects where, for each object, contains keys that correspond to searchGridColumns, and its values are its corresponding column value"]})}),Object(x.jsxs)("li",{children:['If action is set to "downloadFile", then it passes the follow as a second parameter:',Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" resetCallback "}),"= a callback function to be triggered by the hook callback to specify whenever the download is done; this is important to get called so that the menu option can be clicked again."]})})]}),Object(x.jsx)("li",{children:"If action property is omitted, and dependsOnRowSelection is false, then onClickHandler gets called without passing any properties."})]}),Object(x.jsx)("br",{}),Object(x.jsx)("li",{children:'(if action is "openPopup") the following properties:'}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupHeader:"})," a string that is the title of the popup"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupContent:"})," a hook callback function that will handle the contents to display inside the popup. SearchFormComponent passes in the following parameters:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["if dependsOnRowSelection is set to true, then it passes in the following as the first parameter.",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" rowsArray "}),"= an array of row objects where, for each object, contains keys that correspond to searchGridColumns, and its values are its corresponding column value"]})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" popupCallback "}),"= a callback function that can be used by the hook callback function to trigger one of the following:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"closePopup"}),": closes the popup. Called like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:D})})}),Object(x.jsxs)("p",{children:[Object(x.jsx)("u",{children:"Note:"})," If the grid needs to be refreshed when the popup closes, pass in a boolean value ",Object(x.jsx)("b",{children:"true"})," like so:"]}),Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:A})})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"transferTab"}),": if the SearchFormComponent is a child of TabComponent, it will open the target tab. Would need to call the function like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:I})})})]})]})]})]}),Object(x.jsxs)("li",{children:["Additionally, you can customize the popup with this optional property:",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupClassName:"})," a string that is passed on as a classname for the popup for CSS styling; helps with specifying the margins (which determines the width of the specific popup) via CSS"]})})]})]}),Object(x.jsx)("br",{}),Object(x.jsx)("li",{children:'(if action is set to "confirmAction") the following properties:'}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"confirmationMessage"}),": The message to show inside the confirmation popup.",Object(x.jsx)("ul",{children:Object(x.jsx)("li",{children:'If omitted, defaults to: "Are you sure you want to perform this action?"'})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:"confirmationCallback"}),': A hook callback function to be triggered once the user clicks "Yes" to the confirmation popup. SearchFormComponent passes in the following parameters:',Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["if dependsOnRowSelection is set to true, then it passes in the following as the first parameter:",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" rowsArray "}),"= an array of row objects where, for each object, contains keys that correspond to searchGridColumns, and its values are its corresponding column value"]})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"resetCallback"})," = a callback function to be triggered by the hook to specify whenever the confirmation callback function is done.",Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:"This is important to get called so that the menu option can be clicked again."}),Object(x.jsxs)("li",{children:[Object(x.jsx)("u",{children:"Note:"})," If the grid needs to be refreshed, pass in a boolean value ",Object(x.jsx)("b",{children:"true"})," when calling resetCallback like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"resetCallback(true);"})})})]})]})]})]})]})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:['(if action is "renderCustomContent") ',Object(x.jsx)("b",{children:"renderedCustomContent"}),"= a hook callback content that gets rendered.",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:["SearchFormComponent passes in the same parameters as ",Object(x.jsx)("b",{children:"confirmationCallback"})," given the same dependsOnRowSelection condition."]})}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" subMenuItems:"})," an array of objects to appear as a sub-menu for the search menu nav option."]}),Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:"Its objects contains the same properties as searchMenuOptions since, when the user selects them, they use the same internal handling."}),Object(x.jsx)("li",{children:"These properties include: key, title, image/icon, dependsOnRowSelection, action, onClickHandler, popupHeader, popupClassName, and popupContent."})]})]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'searchMenuOptions: [\n  {\n      key: "generateStudent", title: "Generate Student Report", image: pdf,\n      dependsOnRowSelection: true,\n      action: "downloadFile",\n      onClickHandler: this.generateStudentReport\n  }, \n  {\n      key: "actions", title: "Actions", image: actions,\n      subMenuItems: [\n          {\n              key: "multipleStudentInfoUpdate",\n              title: "Multiple Student Info Update",\n              image: batchAdd,\n              action: "openPopup",\n              popupHeader: "Multiple Student Info Update",\n              popupContent: this.getMultipleStudentInfoUpdateForm,\n              dependsOnRowSelection: true\n          },\n          {key: "createNewStudent", title: "Create New Student", image: create},\n          {key: "deleteStudent", title: "Delete Student", image: delete},\n          {\n              key: "extracurricularActivities",\n              title: "Manage Extracurricular Activities", image: manage,\n              subMenuItems: [\n                  {key: "addNewActivity", title: "Add New Activity", image: create},\n                  {key: "deleteNewActivity", title: "Delete Activity", image: delete},\n              ]\n          },\n      ]\n  }\n]'})})})})]})]}),Object(x.jsx)("hr",{width:"90%"}),Object(x.jsxs)("section",{id:"alternateSetup",children:[Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Alternate Setup "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"isMetrics"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Description"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:["Specifies whether the SearchFormComponent should be formatted as a filterable metrics grid.",Object(x.jsx)("br",{}),"If set to true:",Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:'The "Reset" and "Search" nav options are replaced with "Filter"'}),Object(x.jsx)("li",{children:'The grid performs the search upon first viewing rather than needing to press some "Search" button first'}),Object(x.jsx)("li",{children:"The grid has a refresh button on the top right"})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"boolean"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"false"})]})]}),Object(x.jsx)("hr",{width:"95%"}),Object(x.jsxs)("section",{id:"reduxSetup",children:[Object(x.jsx)("h5",{style:{textAlign:"left",paddingLeft:50,color:"#63b4cf"},children:" Grid "}),Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Redux Setup For Search Results "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"reducerID"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"The sequence of properties that react-redux will use to pin-point the exact state to be used by the result grid in locating its row values"}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"An array of strings"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'reducerID: ["students", "info"]'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchID"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the ID to be used by react-redux in locating the result grid's rows, as well as saving them (see searchHandler below)"}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"A string"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'searchID: "studentID"'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchHandler"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:['The callback function where the user\'s input in the search fields are passed in after clicking "Search" or "Filter".',Object(x.jsx)("br",{}),"Passes in the following parameters to the specified callback function:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"searchID"}),": same as searchID above"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"searchCriteria"}),": an object whose keys correspond to searchFormField's keys, and values are as inputted by the user"]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"A callback function"})]})]}),Object(x.jsx)("hr",{width:"90%"}),Object(x.jsxs)("section",{id:"gridSetup",children:[Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Setting Up The Grid "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchGridColumns"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the columns of the grid."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:["an array of JSON objects whose properties are:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"name"}),": the key/id of the column used for mapping the row values to the column"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"title"}),": the label of the column"]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'searchGridColumns: [\n    {name: "studentID", title: ""},\n    {name: "name", title: "Name"},xx\n    {name: "dateOfBirth", title: "Date of Birth"},\n    {name: "yearLevel", title: "Year Level"},\n    {name: "attendanceHistory", title: "Attendance History"},\n    {name: "gradesDropdown", title: "Grades"},\n    {name: "transcript", title: "Transcript"},\n    {name: "activities", title: "Activities"},\n]'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"allowRowSelection"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Provides an ability to select rows in the grid."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a boolean where, if set to true, adds a checkbox to the left of the rows, and tracks the selected rows"}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"false"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"allowRowDetails"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Allows for rows to be collapsed to view additional details."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a boolean were, if set to true, it renders a chevron-right icon to the left of the row indicating it is collapsable for showing row details."}),Object(x.jsx)("dt",{className:"col-sm-3",style:{color:"red"},children:"Needs to Have"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"rowDetailsContent"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"false"})]})]}),Object(x.jsx)("hr",{width:"90%"}),Object(x.jsxs)("section",{id:"gridCustomization",children:[Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Customizing the Grid"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"rowDetailsContent"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"The content to display in the expanded row-details."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a hook callback. Passes in the collapsed row object which contains keys that correspond to searchGridColumns, and its values are its corresponding column value."}),Object(x.jsx)("dt",{className:"col-sm-3",style:{color:"red"},children:"Needed When"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"rowDetailsContent = true"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Default"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"false"})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"tableCellConfig"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies how the table cells should be configured for displaying and interactions."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:["a JSON object whose keys correspond to those in searchGridColumns, and values are objects with the following keys:",Object(x.jsxs)("ul",{children:[Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" action "}),": the type of action that the tableCell will have. Can be one of the following:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"downloadFile"'})," = fires the onClickHandler callback, which should handle the downloading of the file"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"openDropdown"'})," = renders a dropdown icon where, upon hovering with the cursor, shows a menu based on dropdownOption"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"openPopup"'})," = triggers a popup to open, and will fire the popupContent callback to get the content to be displayed inside the popup."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"transferTab"'}),' = if searchForm is rendered as a child of TabComponent, and the "tabToOpen" prop is specified, then clicking the tableCell will trigger the TabComponent to open another tab whose key corresponds to targetTab']})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[' (if action is "downloadFile") ',Object(x.jsx)("b",{children:" onClickHandler"}),": a hook callback function that will handle the onClick on the table cell based on the action type selected. Passes in the following parameters:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"rowData"})," = the data of the whole row as an object whose keys correspond to searchGridColumns, and values are its corresponding column value"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"resetCallback"})," = a callback function to be triggered by the hook callback to specify whenever the action performed is completed; this is important to get called so that the table cell can be clicked again"]})]}),Object(x.jsx)("br",{}),Object(x.jsx)("li",{children:' (if action is "openPopup") the following properties:'}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupHeader "}),": a string that is the title of the popup"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupContent "}),": a hook callback function that will handle the contents to display inside the popup. SearchFormComponent passes in the following parameters to the hook:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"rowData"})," = the data of the whole row as an object whose keys correspond to searchGridColumns, and values are its corresponding column value"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" popupCallback "}),"= a callback function that can be used by the hook callback function to trigger one of the following:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"closePopup"}),": closes the popup. Called like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:D})})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"transferTab"}),": if the SearchFormComponent is a child of TabComponent, it will open the target tab. Would need to call the function like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:I})})})]})]})]})]}),Object(x.jsxs)("li",{children:["Additionally, you can customize the popup with this optional property:",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupClassName:"})," a string that is passed on as a classname for the popup for CSS styling; helps with specifying the margins (which determines the width of the specific popup) via CSS"]})})]})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[' (if action is "transferTab") ',Object(x.jsx)("b",{children:"targetTab"}),": a string that indicates which tabKey to open. Passes in the following parameters to the target tab:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"rowData:"}),"the data of the whole row as an object whose keys correspond to searchGridColumns, and values are its corresponding column value"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"column:"}),' a JSON object whose property "name" corresponds to the column where the "transferTab" action was configured to.']})]}),Object(x.jsx)("br",{}),Object(x.jsxs)("li",{children:[' (if action is "openDropdown") ',Object(x.jsx)("b",{children:"dropdownOptions"}),": an array of objects whose that contain the following properties:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"key:"})," the key of the option"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"title:"})," the title/label to show for the option"]}),Object(x.jsx)("li",{children:" (if desired) one of the following:"}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"image:"})," the file (.png, .gif, etc.) to show to the left of the option title"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"icon:"})," the icon to show to the left of the option title; the icon corresponds to the name value of the icon found here: https://react.semantic-ui.com/elements/icon/"]})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"action:"})," a string of one of two values:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"downloadFile"'})," = fires the callback function on the onClickHandler property found in the same dropdownOption object, NOT tableCellConfig's. The onClickHandler should handle the downloading of the file."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"transferTab"'}),' = see previous "transferTab" description as it executes the same (tableCellConfig > action > "transferTab"). Similarly, it will need the ',Object(x.jsx)("b",{children:"targetTab"})," property."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:'"openPopup"'})," = triggers a popup to open, and will fire the popupContent callback to get the content to be displayed inside the popup."]})]}),Object(x.jsxs)("li",{children:['(if action is "downloadFile") ',Object(x.jsx)("i",{children:"onClickHandler"})," = a hook callback function that passes in the following parameters for downloading files:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"rowData"})," = the data of the whole row as an object whose keys correspond to searchGridColumns, and values are its corresponding column value"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"resetCallback"})," = a callback function to be triggered by the hook callback to specify whenever the action performed is completed; this is important to get called so that the dropdown option will trigger the download again"]})]})]}),Object(x.jsxs)("li",{children:['(if action is "transferTab") ',Object(x.jsx)("i",{children:"targetTab"}),' = see previous "targetTab" description as it executes the same (tableCellConfig > targetTab).',Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:["Additionally, it also passes in the following as a third parameter:",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"key"})," = the dropdown option's key"]})})]})})]}),Object(x.jsx)("li",{children:'(if action is "openPopup") the following properties:'}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupHeader:"})," a string that is the title of the popup"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupContent:"})," a hook callback function that will handle the contents to display inside the popup. SearchFormComponent passes in the following parameters:"]}),Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["if dependsOnRowSelection is set to true, then it passes in the following as the first parameter.",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" rowsArray "}),"= an array of row objects where, for each object, contains keys that correspond to searchGridColumns, and its values are its corresponding column value"]})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:" popupCallback "}),"= a callback function that can be used by the hook callback function to trigger one of the following:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"closePopup"}),": closes the popup. Called like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:D})})}),Object(x.jsxs)("p",{children:[Object(x.jsx)("u",{children:"Note:"})," If the grid needs to be refreshed when the popup closes, pass in a boolean value ",Object(x.jsx)("b",{children:"true"})," like so:"]}),Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:A})})})]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("i",{children:"transferTab"}),": if the SearchFormComponent is a child of TabComponent, it will open the target tab. Would need to call the function like so:",Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:I})})})]})]})]})]}),Object(x.jsxs)("li",{children:["Additionally, you can customize the popup with this optional property:",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("b",{children:" popupClassName:"})," a string that is passed on as a classname for the popup for CSS styling; helps with specifying the margins (which determines the width of the specific popup) via CSS"]})})]})]})]})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'tableCellConfig: {\n    transcript: {\n        action: "downloadFile",\n        onClickHandler: this.downloadTranscript\n    },\n    attendance: {\n        action: "openPopup",\n        popupHeader: "Attendance History",\n        popupContent: this.getAttendanceHistoryContent,\n        popupClassName: "attendanceHistory"\n    },\n    gradesDropdown: {\n        action: "openDropdown",\n        dropdownOptions: [\n            {\n                key: "viewCurrentGrades",\n                title: "View Current Grades",\n                image: cross,\n                action: "transferTab",\n                targetTab: "viewGradesTab"\n            },\n            {\n                key: "getGradesReport", title: "Generate Grades Report", image: pdf,\n                action: "downloadFile",\n                onClickHandler: this.generateGradesReport\n            },\n        ]\n    },\n    activities: {action: "transferTab", targetTab: "View Student Activities"}\n}'})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchGridHiddenColumns"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies which columns to hide from the grid."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a string array whose elements corresponds to keys in searchGridColumns."}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:'searchGridHiddenColumns: ["studentID"]'})})})})]})]}),Object(x.jsx)("hr",{width:"90%"}),Object(x.jsxs)("section",{id:"gridStyling",children:[Object(x.jsx)("h6",{style:{textAlign:"left",paddingLeft:100,color:"gray"},children:" Styling The Grid "}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchGridColumnWidths"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the widths that each column will span to."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsxs)("dd",{className:"col-sm-9",children:["a JSON object whose keys are the key/id of the column corresponding to searchGridColumns, and values (of number type) are the widths (in px)",Object(x.jsxs)("ul",{children:[Object(x.jsx)("li",{children:"if unspecified, all columns will be of width 180px"}),Object(x.jsx)("li",{children:"if specified, but some columns are omitted, then omitted columns will be of width 180px"})]})]}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"searchGridColumnWidths: {\n    //studentID is a hidden column so width is not needed\n    name: 250,\n    yearLevel: 50,\n    attendanceHistory: 100,\n    gradesDropdown: 50,\n    transcript: 100,\n    //dateOfBirth and activities defaults to 180\n}"})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchGridHeight"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the maximum height that the grid can expand to. Going above this height (by setting page count higher) will add vertical scrollbars."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a string of CSS-supported width (px, em, %, etc.)"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"searchGridHeight: '50vh'"})})})})]}),Object(x.jsx)("hr",{width:"85%"}),Object(x.jsxs)("dl",{className:"row",children:[Object(x.jsx)("dt",{className:"col-sm-3",children:"Name"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("i",{children:"searchGridWidth"})}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Description"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"Specifies the maximum width that the grid will expand to. Going above this width (by expanding columns) will add horizontal scrollbars."}),Object(x.jsx)("dt",{className:"col-sm-3",children:"Value"}),Object(x.jsx)("dd",{className:"col-sm-9",children:"a string of CSS-supported width (px, em, %, etc.)"}),Object(x.jsx)("dt",{className:"col-sm-3",children:" Example"}),Object(x.jsx)("dd",{className:"col-sm-9",children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:"searchGridWidth: '1500px'"})})})})]})]})]}),Object(x.jsx)(p.CircleArrow,{showAtPosition:500})]})}}]),s}(c.Component),F=s(201),P=s(202),R=s(196),L=(s(161),s(162),s(128)),G=s.n(L),V=(s(163),s(117)),z=s(197),M=s(198),q=s(199),H=s(203),B=function(e){return Array.isArray(e)&&e.length>0},E=s(193),W=s(194),J=s(195),Y=(s(109),function(e){return void 0!==e&&null!==e&&"object"===typeof e&&Object.keys(e).length>0}),U=function(e){return null!==e&&void 0!==e},K=function(e){return null!==e&&void 0!==e&&"string"===typeof e&&""!==e},$=(s(164),function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(e){var c;return Object(r.a)(this,s),(c=t.call(this,e)).state={activeKey:e.defaultMenuItemSelected?e.defaultMenuItemSelected:""},c.changeActiveKey=function(e,t){var s=t.name;return c.setState({activeKey:s})},c}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"componentDidUpdate",value:function(e,t,s){m.a.highlightAll()}},{key:"render",value:function(){var e,t,s=this,c=this.props,l=c.title,a=c.menuItems,n=c.contentItems,i=c.darkMode,r=this.state.activeKey,o=function e(t){var c=[];return Array.isArray(t.subMenuItems)?(t.subMenuItems.forEach((function(t){t.hasOwnProperty("subMenuItems")?c.push(e(t)):c.push(Object(x.jsx)(M.a.Item,{name:t.key,active:s.state.activeKey===t.key,onClick:s.changeActiveKey,children:t.label}))})),Object(x.jsxs)(M.a.Item,{children:[Object(x.jsx)(M.a.Header,{children:t.label}),Object(x.jsx)(M.a.Menu,{children:c})]})):t.subMenuItems(s.changeActiveKey)},d=[];if(B(a)&&(a.forEach((function(e){if(e.hasOwnProperty("subMenuItems")){var t=o(e);d.push(t)}else d.push(Object(x.jsx)(M.a.Item,{name:e.key,active:s.state.activeKey===e.key,onClick:s.changeActiveKey,children:Object(x.jsx)(M.a.Header,{children:e.label})}))})),K(l))){var h={backgroundColor:"#BFBFBF"};i&&(h={backgroundColor:"#576069",color:"white"}),d.unshift(Object(x.jsx)(M.a.Item,{as:"h3",header:!0,content:l,style:h}))}return Y(n)&&n.hasOwnProperty(r)&&B(n[r].properties)&&(e=n[r].properties.map((function(e){var t=e.name,s=e.description,c=e.value,l=e.defaultValue,a=e.example,n=e.notes,r=e.requires,o=e.title,d=e.subtitle;return"sectionDivider"===t?Object(x.jsxs)(q.a,{as:"h3",block:!0,inverted:i,children:[U(o)&&Object(x.jsx)(q.a.Content,{children:o}),U(d)&&Object(x.jsx)(q.a.Subheader,{style:{paddingTop:".5em"},children:d})]}):Object(x.jsxs)(H.a,{raised:!0,inverted:i,children:[Object(x.jsx)(E.a,{noGutters:!0,style:{paddingBottom:".5em",paddingLeft:"1em"},children:Object(x.jsxs)("h4",{children:[Object(x.jsx)("code",{className:"property",children:t}),"Prop"]})}),Object(x.jsxs)(E.a,{noGutters:!0,children:[U(s)&&[Object(x.jsx)(W.a,{xs:3,children:"Description"}),Object(x.jsx)(W.a,{xs:9,children:s})],U(c)&&[Object(x.jsx)(W.a,{xs:3,children:"Value"}),Object(x.jsx)(W.a,{xs:9,children:c})],U(l)&&[Object(x.jsx)(W.a,{xs:3,children:"Default Value"}),Object(x.jsx)(W.a,{xs:9,children:Object(x.jsx)("code",{className:"property",style:{marginLeft:0},children:l})})],B(r)&&[Object(x.jsx)(W.a,{xs:3,children:Object(x.jsx)("span",{style:{fontWeight:"bold",color:"red"},children:"Requires"})}),Object(x.jsx)(W.a,{xs:9,children:r.map((function(e,t,s){var c;return s[t+1]&&(c=Object(x.jsx)("span",{children:",\xa0\xa0"})),[Object(x.jsx)("code",{className:"property",style:{marginLeft:0},children:e}),c]}))})],U(n)&&[Object(x.jsx)(W.a,{xs:3,children:Object(x.jsx)("span",{className:"notes",children:"Notes"})}),Object(x.jsx)(W.a,{xs:9,children:n})],K(a)&&[Object(x.jsx)(W.a,{xs:3,children:"Example"}),Object(x.jsx)(W.a,{xs:9,children:Object(x.jsx)("section",{className:"codeSample",children:Object(x.jsx)("pre",{className:"language-javascript",children:Object(x.jsx)("code",{children:a})})})})]]})]})})),n[r].hasOwnProperty("images")&&B(n[r].images)&&e.unshift(Object(x.jsx)(H.a,{raised:!0,inverted:i,children:Object(x.jsx)(O.a,{interval:null,controls:1!==n[r].images.length,indicators:1!==n[r].images.length,className:"menuAndContentCarousel",children:n[r].images.map((function(e){return Object(x.jsxs)(O.a.Item,{children:[Object(x.jsx)("img",{className:"d-block w-100",src:e.image,alt:e.image}),e.hasOwnProperty("caption")&&Object(x.jsx)(O.a.Caption,{children:Object(x.jsx)("h3",{children:e.caption})})]})}))})})),n[r].hasOwnProperty("introduction")&&e.unshift(Object(x.jsx)(H.a,{raised:!0,inverted:i,children:Object(x.jsx)("h4",{children:n[r].introduction})})),n[r].hasOwnProperty("conclusion")&&e.push(Object(x.jsx)(H.a,{raised:!0,inverted:i,children:n[r].conclusion}))),window.screen.width<=1250?t=Object(x.jsx)(M.a,{vertical:!0,stackable:!0,inverted:i,fluid:!0,children:d}):window.screen.width>1250&&(t=Object(x.jsx)(W.a,{xs:2,children:Object(x.jsx)(M.a,{vertical:!0,stackable:!0,inverted:i,fluid:!0,children:d})})),Object(x.jsx)("div",{className:"menuAndContentComponent",children:Object(x.jsx)(J.a,{fluid:!0,style:{paddingTop:"10px",paddingBottom:"10px"},children:Object(x.jsxs)(E.a,{children:[t,Object(x.jsx)(W.a,{style:{paddingLeft:"1em"},children:e})]})})})}}]),s}(l.a.Component)),Q=s.p+"static/media/Filtering-Grid-Design.6574eb36.png",_=s.p+"static/media/Grouping-Example.baf170fc.gif",X={title:"Grid Component",defaultMenuItemSelected:"required",menuItems:[{key:"required",label:"Required"},{key:"dataFormatting",label:"Data Formatting",subMenuItems:[{key:"treeData",label:"Tree Data"}]},{key:"columnFormatting",label:"Column Formatting",subMenuItems:[{key:"columnWidths",label:"Column Widths"},{key:"columnReorder",label:"Column Reordering"},{key:"hiddenColumns",label:"Hiding Columns"}]},{key:"rowFormatting",label:"Row Formatting",subMenuItems:[{key:"rowDetails",label:"Row Details"}]},{key:"tableCellFormatting",label:"Table Cell Formatting"},{key:"filtering",label:"Filtering"},{key:"grouping",label:"Grouping"},{key:"summarizing",label:"Summarizing"},{key:"selecting",label:"Selecting"},{key:"dataModifications",label:"Data Modifications",subMenuItems:[{key:"creating",label:"Creating"},{key:"editing",label:"Editing"},{key:"deleting",label:"Deleting"}]},{key:"paging",label:"Paging"},{key:"sorting",label:"Sorting"},{key:"additionalFeatures",label:"Additional Features",subMenuItems:[{key:"refreshing",label:"Refreshing"},{key:"exporting",label:"Exporting"},{key:"totalCount",label:"Total Count"}]},{key:"styling",label:"Styling",subMenuItems:[{key:"className",label:"CSS Class Name"},{key:"height",label:"Max Height"},{key:"width",label:"Max Width"},{key:"buttonLabels",label:"Refresh/Export Button Labels"}]}],contentItems:{required:{introduction:Object(x.jsxs)("div",{children:["The GridComponent requires two properties to render properly: \xa0",Object(x.jsx)("code",{className:"property",children:"columns"})," and",Object(x.jsx)("code",{className:"property",children:"rows"}),"."]}),properties:[{name:"columns",description:"the list of columns for the given grid",value:Object(x.jsxs)("span",{children:["an array of JSON objects with the following properties:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"name"})," - the key/id of the column"]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"title"})," - the title of the column to be displayed in the header"]})]}),"Optionally, a type can be specified for a column using the following property.",Object(x.jsx)("ul",{children:Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"type"})," - the type of the column; used for formatting how the data is displayed"]})}),"The available types are:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"currency"})," - adds a $ to the left of the data; right-aligns the data."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"number"})," - right-aligns the data."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"date"}),' - reformats the data to the default "MM/DD/YYYY" format. Can specify an alternative format using the "format" property.']})]})]}),example:'columns = { [\n    {name: "name", title: "Name"}, \n    {name: "age", title: "Age", type: "number"},\n    {name: "insDate", title: "Insert Date", type: "date"},\n    {name: "updDate", title: "Update Date", type: "date", format: "MM/DD/YYYY hh:mm:ss a"},\n    {name: "balance", title: "Balance", type: "currency"}\n] }',notes:"Specifying the type of a column does not alter its respective row data. It's only used to determine how the data will be presented to the user."},{name:"rows",description:"the list of rows (data) for the grid",value:"an array of JSON objects whose keys corresponds to the 'name' in the columns prop.",example:'rows = { [\n        {name: "Sarah", age: 24, insDate: "2007-10-23 09:11:04.000", updDate: "2009-12-02 00:32:03.000", balance: 234.43},\n        {name: "John", age: 32, insDate: "2010-10-23 10:34:02.000", updDate: "2009-12-02 00:12:03.000", balance: 647.70},\n        {name: "Sam", age: 26, insDate: "2009-09-12 19:23:04.000", updDate: "2009-12-02 12:53:03.000", balance: 0.00}\n] }',notes:"For proper sorting behavior, ensure to pass numbers as column values for number-typed columns."}]},treeData:{introduction:"The rows data can be rendered in a tree-like fashion.",properties:[{name:"isTreeData",description:Object(x.jsxs)("div",{children:["toggles whether the",Object(x.jsx)("code",{className:"property",children:"rows"}),"property contains a 'children' property that is to be displayed as a tree."]}),value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",example:'isTreeData = {true}\nrows = { [\n    {\n        "orderNo" : "3641223-1203322",\n        "orderDate" : "2021-05-30 09:11:04.000",\n        "customerName": "Charles Smith"\n        "children": [\n            {\n                "itemId" : 105356,\n                "lineItem" : 1,\n                "itemName" : "Apples",\n                "weight": 1.00,\n                "uom": "oz"\n                "unitPrice": .60\n            },\n            {\n                "itemId": 105356,\n                "lineItem": 2,\n                "itemName" : "Oranges",\n                "weight": 1.00,\n                "uom": "oz"\n                "unitPrice": .60\n            }\n        ]\n    }, {\n        "orderNo" : "3641223-1207712",\n        "orderDate" : "2021-07-10 09:11:04.000",\n        "customerName": "Jess Nguyen"\n        "children": [\n            {\n                "itemId" : 118223,\n                "lineItem" : 1,\n                "itemName" : "Speakers",\n                "weight": 2.00,\n                "uom": "lbs"\n                "unitPrice": 79.99\n            },\n            {\n                "itemId": 176212,\n                "lineItem": 2,\n                "itemName" : "Screen Cleaner",\n                "weight": 1.00,\n                "uom": "lb"\n                "unitPrice": 9.99\n            }\n        ]\n    }\n] }'}]},columnWidths:{introduction:"The default widths of each column can be customized so that more data could be visible for a specific column, or to consolidate the extra spaces in the data.",properties:[{name:"columnWidths",description:"the specified column widths for each column. If not specified, the default will be applied.",value:Object(x.jsxs)("div",{children:["a JSON object whose keys corresponds to the ",Object(x.jsx)("code",{className:"property",children:"columns"}),' "name" property.']}),defaultValue:180,example:"columnWidths = { {\n    name: 200,\n    age: 90,\n    balance: 100\n    //Any unspecified columns will have 180 pre-populated\n} }"}]},columnReorder:{introduction:"Users can be allowed to reorder columns if desired.",properties:[{name:"allowColumnReorder",description:"toggles whether the user is allowed to reorder the columns.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",example:"allowColumnReorder = { true }"}]},hiddenColumns:{introduction:Object(x.jsx)("div",{children:"Certain columns can be hidden from view to prevent interactions against them, or from showing their values."}),properties:[{name:"hiddenColumns",description:"a list of hidden columns on the grid",value:Object(x.jsxs)("div",{children:["an array whose values correspond to the",Object(x.jsx)("code",{className:"property",children:"columns"}),'"name" property ']}),example:'hiddenColumns = { [\n "orderId", "itemId" \n] }'}]},rowDetails:{introduction:"Rows can be allowed to expand to view additional details based on information for a specific row.",properties:[{name:"allowRowDetail",description:"toggles whether the rows can be expanded to view additional details.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["rowDetailContent"],example:"allowRowDetail = { true }"},{name:"rowDetailContent",description:"the content to display when a row gets expanded.",value:Object(x.jsxs)("div",{children:["a callback function. When a row is expanded, it passed in a",Object(x.jsx)("code",{className:"property",children:"row"}),"object as a parameter. The object is formatted where the keys correspond to the",Object(x.jsx)("code",{className:"property",children:"columns"}),"prop."]}),requires:["allowRowDetail"],example:"allowRowDetail = { true }, \nrowDetailContent = {\n    (row) => {\n        const {itemId, itemName, uom, unitPrice} = row;\n        \n        return <div>\n            > Item Name: {itemName}\n            > Unit Of Measure: {uom}\n            > Cost: {unitPrice}\n        </div> \n    }\n}"}]},tableCellFormatting:{introduction:"Table cells can be customized to have onClick callbacks, or reformat its appearance to include specific stylings, etc.",properties:[{name:"tableCellConfig",description:"the specified styling/behavior for cells for a specific column of the table.",value:Object(x.jsxs)("div",{children:["a JSON object whose keys correspond to the",Object(x.jsx)("code",{className:"property",children:"columns"}),'"name" property, and values are JSON objects with properties:',Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"onClick"})," - a callback function that takes parameters",Object(x.jsx)("code",{className:"property",children:"(row, column)"}),"and handles when the table cell gets clicked."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"style"})," - the additional styling to apply to a table cell. Can be used to customize the text of a cell, or its borders."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"renderedComponent"})," - a callback function that takes parameters",Object(x.jsx)("code",{className:"property",children:"(row, column)"}),"and returns some HTML/React element. Can be used to display something other than the text value of the table cell (ex. dropdown)."]})]})]}),example:"tableCellConfig = {\n    itemName: {\n        onClick: (row, column) => {\n            this.downloadInventoryReport(row)           \n        },\n        style: {\n            color: 'blue',\n            cursor: 'pointer',\n            textDecoration: 'underline'\n        }\n    },\n    \n    itemNameDropdown: {\n        renderedComponent: (row, column) => { \n            <Popup trigger={<Icon name={\"caret square down\"}/>}>\n                <Dropdown.Item onClick={() => this.openDetailsPopup(row)}>View Details</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.downloadInventoryReport(row)}>Download Inventory Report</Dropdown.Item>\n                <Dropdown.Item onClick={() => this.openEditPricePopup(row)}>Update Price</Dropdown.Item>\n            </Popup>\n        }\n    }\n}"}]},filtering:{introduction:Object(x.jsxs)("div",{children:["Users can easily filter through all the",Object(x.jsx)("code",{className:"property",children:"rows"}),"array through a input field that is rendered on the top-right of the grid."]}),images:[{image:Q,caption:"The grid appears with a 'Search' button on top-right."}],properties:[{name:"allowFiltering",description:"toggles whether to display the filter search field, and allow users to dynamically filter through the rows data.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",example:"allowFiltering = { true }"}]},grouping:{introduction:"The GridComponent can group together similar values within specified column(s), and format its appearance for ease of navigating the unique groups.",images:[{image:_,caption:"Data is grouped together into a collapsible group tree."}],properties:[{name:"allowGrouping",description:"toggles whether the rows in the grid should be grouped by a specified column.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["grouping"],notes:Object(x.jsxs)("div",{children:["For grouping to work properly, the",Object(x.jsx)("code",{className:"property",children:"rows"}),"property should include all of the data possible. This way, all the data can be grouped properly, internally. Remote paging should therefore be disabled."]}),example:"allowGrouping = { true }"},{name:"grouping",description:"specifies the column(s) to group the rows by.",value:Object(x.jsxs)("div",{children:["either an array of strings, or a single string. Each string value should correspond to the",Object(x.jsx)("code",{className:"property",children:"columns"}),'"name" property']}),requires:["allowGrouping"],example:'allowGrouping = { true }\ngrouping = { "productType" }'},{name:"expandGroupsByDefault",description:"toggles whether to expand all groups by default.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowGrouping","grouping"],example:"expandGroupsByDefault = { true }"},{name:"hideColumnNameInGrouping",description:"toggles whether to hide the column name in the grouping header.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowGrouping","grouping"],example:"hideColumnNameInGrouping = { true }"},{name:"showGroupCount",description:"toggles whether to show the number of rows associated with a group in the grouping header.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowGrouping","grouping"],example:"showGroupCount = { true }"}]},summarizing:{introduction:"Columns can provide a summary based on the values of the rows for that column. ",properties:[{name:"allowSummarizing",description:"toggles whether to show a summary section to specified column(s).",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),requires:["summaryItems"],defaultValue:"false",example:"allowSummarizing = { true }"},{name:"summaryItems",description:"the column(s) to provide a summary for, and what type of summary to provide.",value:Object(x.jsxs)("div",{children:["an array of JSON objects with the following properties:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"columnName"}),"- a string that corresponds to one of the",Object(x.jsx)("code",{className:"property",children:"columns"}),' "name" property.']}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"type"})," - one of the following:",Object(x.jsx)("code",{className:"property",children:"sum"}),",",Object(x.jsx)("code",{className:"property",children:"max"}),",",Object(x.jsx)("code",{className:"property",children:"min"}),",",Object(x.jsx)("code",{className:"property",children:"avg"}),", or",Object(x.jsx)("code",{className:"property",children:"count"})]})]})]}),requires:["allowSummarizing"],notes:"If desired, the same column can provide more than one type of summary.",example:'allowSummarizing = { true }\nsummaryItems = { [\n    columnName: "lineItem", type: "count"\n    columnName: "unitPrice", type: "avg",\n    columnName: "unitPrice", type: "max",\n    columnName: "unitPrice", type: "min",\n    columnName: "profitMargin", type: "sum"\n] }'},{name:"summaryItemLabels",description:Object(x.jsxs)("div",{children:["The labels that will replace the default labels for the summaries.",Object(x.jsx)("br",{}),'For example, for a column that has a sum of "100", the summary will appear as',Object(x.jsx)("code",{className:"property",children:"Sum: 100"}),'. If the user overrides the label to be "Total", then the summary will appear instead as',Object(x.jsx)("code",{className:"property",children:"Total: 100"})]}),value:Object(x.jsxs)("div",{children:["a JSON object whose keys corresponds to one of the types (",Object(x.jsx)("code",{className:"property",children:"sum"}),",",Object(x.jsx)("code",{className:"property",children:"max"}),",",Object(x.jsx)("code",{className:"property",children:"min"}),", etc. ) and values are strings that will replace its labels."]}),requires:["allowSummarizing","summaryItems"],example:'summaryItemLabels = { {\n    sum: "Total",\n    max: "Max. Price",\n    avg: "Average Price"       \n} }'},{name:"customSummaries",description:"The custom summary value(s) to provide, replacing the internal calculated value(s).",value:Object(x.jsxs)("div",{children:["an array of numeric-typed values that will override the summary values in the same order as the",Object(x.jsx)("code",{className:"property",children:"summaryItems"}),"."]}),example:"customSummaries = { [1259.00, 79.99, 50.00] }"}]},selecting:{introduction:"Selections can be allowed to the users so they can choose which rows they want to perform an action to.",properties:[{name:"allowSelections",description:"toggles whether to show the select buttons on the left side of the rows for external manipulation.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["selections","changeSelections"],example:"allowSelections = { true }"},{name:"selections",description:"the list of rows that the user selected.",value:Object(x.jsxs)("div",{children:["a variable that stores the",Object(x.jsx)("code",{className:"property",children:"selections"}),"as provided by the",Object(x.jsx)("code",{className:"property",children:"changeSelections"})," property."]}),requires:["allowSelections","changeSelections"],notes:Object(x.jsxs)("div",{children:["The variable should be initialized as an empty array",Object(x.jsx)("code",{className:"property",children:"[]"}),". In the example below, in the state object the",Object(x.jsx)("code",{className:"property",children:"rowSelections"})," is initialized as",Object(x.jsx)("code",{className:"property",children:"rowSelections = []"})]}),example:"selections = { rowSelections }"},{name:"changeSelections",description:Object(x.jsxs)("div",{children:["a function that handles changing the values stored in the variable placed in",Object(x.jsx)("code",{className:"property",children:"selections"}),"prop."]}),value:Object(x.jsxs)("div",{children:["a callback function that takes in a parameter",Object(x.jsx)("code",{className:"property",children:"selections"}),"and replaces the value stored in the variable set in the",Object(x.jsx)("code",{className:"property",children:"selections"}),"property"]}),requires:["allowSelections","selections"],example:"changeSelections = {\n    (selections) => {\n        this.setState({rowSelections: selections});\n    }                     \n}"},{name:"showSelectAll",description:"toggles whether to show a select-all checkbox in the grid header, allowing for selecting all rows in a page.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowSelections","selections","changeSelections"],example:"showSelectAll = { true }"},{name:"selectByRowClick",description:"toggles whether to allow users to click on a row to select them.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowSelections","selections","changeSelections"],notes:"toggling this feature will prevent users from copying table cell values.",example:"selectByRowClick = { true }"}]},creating:{introduction:"Users can be allowed to create new data within the grid, allowing them to input what they want to certain permitted columns. It can also be easier for them to input the data with the ability to specify the types of each column.",properties:[{name:"allowCreating",description:"toggles whether to allow users to create new rows in the grid.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["onCommitChanges","editConfig"]},{name:"onCommitChanges",description:"a function that passes in an object containing the added row(s).",value:Object(x.jsxs)("div",{children:["a callback function that takes in a JSON object as a parameter, which contains a property ",Object(x.jsx)("code",{className:"property",children:"added"}),".",Object(x.jsx)("br",{}),Object(x.jsx)("code",{className:"property",children:"added"})," is an array of JSON objects whose keys corresponds to the",Object(x.jsx)("code",{className:"property",children:"columns"}),' "name" property, and values are the inputted values by the user for those columns.']}),requires:["allowCreating","editConfig"],notes:Object(x.jsxs)("div",{children:["The example below shows how to locally update the",Object(x.jsx)("code",{className:"property",children:"rows"})," value to reflect it on to the table. Rather than changing it locally, it can be replaced with a different callback function that handles it in its own way (ex. making API call to update database, etc.)."]}),example:'onCommitChanges = {\n    //Note how the "added" property is filtered from the object passed in the parameter\n    ({added}) => {\n        const {rows} = this.state;\n        \n        //Re-creating the rows array (to prevent pass-by reference)\n        let newRows = Array.isArray(rows) ? rows.slice() : [];\n        newRows.append(added);\n        \n        //Setting the new version of rows with the added rows\n        this.setState({rows: newRows});\n    }    \n}'},{name:"editConfig",description:"a configuration specifying which columns are allowed for data-input, as well as their input types.",value:Object(x.jsxs)("div",{children:["a JSON object with the following keys:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"fields"})," - a JSON object whose keys correspond to the",Object(x.jsx)("code",{className:"property",children:"columns"}),' "name" property, and values are JSON objects with a single key ',Object(x.jsx)("code",{className:"property",children:"type"}),"."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"fieldsHeight"})," - a CSS-supported height value that specifies how tall the fields will be. Defaults to ",Object(x.jsx)("code",{className:"property",children:"20px"}),"."]})]}),Object(x.jsx)("br",{}),"For ",Object(x.jsx)("code",{className:"property",children:"fields"}),", the available ",Object(x.jsx)("code",{className:"property",children:"type"})," values are:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"text"})," - a regular text field."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"integer"})," - a number-only field."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"double"})," - a number-only field that allows for two decimal places."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"boolean"}),' - a dropdown field that shows options "true" or "false".']}),Object(x.jsxs)("li",{children:[Object(x.jsxs)("code",{className:"property",children:["{dropdown: <",Object(x.jsx)("i",{children:"dropdown values"}),">}"]})," - a field that shows a dropdown."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"date"})," - a date field that shows a date-picker."]})]}),Object(x.jsx)("br",{}),"For the ",Object(x.jsxs)("code",{className:"property",children:["{dropdown: <",Object(x.jsx)("i",{children:"dropdown values"}),">}"]})," type, the ",Object(x.jsxs)("code",{className:"property",children:["<",Object(x.jsx)("i",{children:"dropdown values"}),">"]})," can be one of the following:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["an array of objects in the following format (color can be omitted):",Object(x.jsx)("br",{}),Object(x.jsx)("code",{className:"property",children:"{label: <label>, value: <value>, color: <color>}"})]}),Object(x.jsxs)("li",{children:["a hook callback function that handles the asynchronous retrieval of dropdown options, and returns a",Object(x.jsx)("code",{className:"property",children:"<Select/>"}),"object"]})]})]}),requires:["allowCreating","onCommitChanges"],example:'editConfig = { {\n    fields: {\n        itemName: {label: "Name", type: "text"},\n        quantity: {label: "Qty", type: "integer"},\n        cost: {label: "Price", type: "double"},\n        availability: {label: "In Stock", type: "boolean"},\n        uom: {\n            label: "Unit Of Measure",\n             type: {\n                dropdown: [\n                    {label: "pounds", value: "lbs"},\n                    {label: "ounces", value: "oz"},\n                    {label: "inches", value: "inch"},\n                ]\n            } \n        }},\n        warehouseSource: {\n            label: "Warehouse Source", type: {dropdown: this.getWarehouseOptions} \n        },\n        expirationDate: {label: "Expiration Date", type: "date"}\n    },\n    fieldsHeight: "25px"\n} }'}]},editing:{introduction:"Users can be allowed to edit existing rows, letting them update permitted column values. It can also be easier for them to input the data with the ability to specify the types of each column.",properties:[{name:"allowEditing",description:"toggles whether to allow users to edit existing rows in the grid.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["onCommitChanges","editConfig"]},{name:"onCommitChanges",description:"a function that passes in an object containing the changed row(s).",value:Object(x.jsxs)("div",{children:["a callback function that takes in a JSON object as a parameter, which contains a property ",Object(x.jsx)("code",{className:"property",children:"changed"}),".",Object(x.jsx)("br",{}),Object(x.jsx)("br",{}),Object(x.jsx)("code",{className:"property",children:"changed"})," is a JSON object in the following format:",Object(x.jsx)("ul",{children:Object(x.jsx)("li",{children:Object(x.jsx)("code",{className:"property",children:"{<rows array index>: {<changed column>: <updated column value>, ...} }"})})})]}),requires:["allowEditing","editConfig"],notes:Object(x.jsxs)("div",{children:["The example below shows how to locally update the",Object(x.jsx)("code",{className:"property",children:"rows"})," value to reflect it on to the table. Rather than changing it locally, it can be replaced with a different callback function that handles it in its own way (ex. making API call to update database, etc.)."]}),example:'onCommitChanges = {\n    //Note how the "changed" property is filtered from the object passed in the parameter\n    ({changed}) => {\n        const {rows} = this.state;\n        \n        //Re-creating the rows array (to prevent pass-by reference)\n        let newRows = Array.isArray(rows) ? rows.slice() : [];\n        \n        //Changing the target objects of the rows array based on {changed} values\n        if (changed && Object.keys(changed) > 0) {\n           Object.keys(changed).forEach(index => {\n                newRows[index] = Object.assign({}, newRows[index], changed[index]);\n           }) \n        }\n        \n        //Setting the new version of rows with the edited rows\n        this.setState({rows: newRows});\n    }    \n}'},{name:"editConfig",description:"a configuration specifying which columns are allowed for data-input, as well as their input types.",value:Object(x.jsxs)("div",{children:["a JSON object with the following keys:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"editFormat"})," - specifies the type of edit the grid will render. The value is a string of either",Object(x.jsx)("code",{className:"property",children:"'cell'"})," or",Object(x.jsx)("code",{className:"property",children:"'row'"}),".",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["If ",Object(x.jsx)("code",{className:"property",children:"'row'"}),' is selected, then an "Edit" button will appear on the left of the row. When the row is in edit mode, the user can choose to "Save" or "Cancel" their edits.']}),Object(x.jsxs)("li",{children:["If ",Object(x.jsx)("code",{className:"property",children:"'cell'"}),' is selected, then the edit mode will only trigger on a highlighted table cell. Once in edit mode, the table cell will have options to "Update" or "Cancel" the user\'s edits.']})]}),"Defaults to",Object(x.jsx)("code",{className:"property",children:"'row'"}),"."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"fields"})," - a JSON object whose keys correspond to the",Object(x.jsx)("code",{className:"property",children:"columns"}),' "name" property, and values are JSON objects with a single key ',Object(x.jsx)("code",{className:"property",children:"type"}),"."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"fieldsHeight"})," - a CSS-supported height value that specifies how tall the fields will be. Defaults to ",Object(x.jsx)("code",{className:"property",children:"20px"}),"."]})]}),"For ",Object(x.jsx)("code",{className:"property",children:"editFormat = {'cell'}"})," the following props are available:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"selectTextOnEditStart"})," - specifies whether to highlight the value upon start of edit. Its value is a boolean",Object(x.jsx)("code",{className:"property",children:"true"})," or",Object(x.jsx)("code",{className:"property",children:"false"}),". Defaults to",Object(x.jsx)("code",{className:"property",children:"false"}),"."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"startEditAction"})," - specifies the interaction needed to trigger the table cell to switch to edit more. Its value is string of either",Object(x.jsx)("code",{className:"property",children:"'click'"})," or",Object(x.jsx)("code",{className:"property",children:"'doubleClick'"}),". Defaults to",Object(x.jsx)("code",{className:"property",children:"'doubleClick'"}),"."]})]}),Object(x.jsx)("br",{}),"For ",Object(x.jsx)("code",{className:"property",children:"fields"}),", the available ",Object(x.jsx)("code",{className:"property",children:"type"})," values are:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"text"})," - a regular text field."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"integer"})," - a number-only field."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"double"})," - a number-only field that allows for two decimal places."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"boolean"}),' - a dropdown field that shows options "true" or "false".']}),Object(x.jsxs)("li",{children:[Object(x.jsxs)("code",{className:"property",children:["{dropdown: <",Object(x.jsx)("i",{children:"dropdown values"}),">}"]})," - a field that shows a dropdown."]}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"date"})," - a date field that shows a date-picker."]})]}),Object(x.jsx)("br",{}),"For the ",Object(x.jsxs)("code",{className:"property",children:["{dropdown: <",Object(x.jsx)("i",{children:"dropdown values"}),">}"]})," type, the ",Object(x.jsxs)("code",{className:"property",children:["<",Object(x.jsx)("i",{children:"dropdown values"}),">"]})," can be one of the following:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:["an array of objects in the following format (color can be omitted):",Object(x.jsx)("br",{}),Object(x.jsx)("code",{className:"property",children:"{label: <label>, value: <value>, color: <color>}"})]}),Object(x.jsxs)("li",{children:["a hook callback function that handles the asynchronous retrieval of dropdown options, and returns a",Object(x.jsx)("code",{className:"property",children:"<Select/>"}),"object"]})]})]}),requires:["allowCreating","onCommitChanges"],example:'editConfig = { {\n    editType: { \'cell\' },\n    selectTextOnEditStart: { true },\n    startEditAction: { \'click\' },\n    fields: {\n        itemName: {label: "Name", type: "text"},\n        quantity: {label: "Qty", type: "integer"},\n        cost: {label: "Price", type: "double"},\n        availability: {label: "In Stock", type: "boolean"},\n        uom: {\n            label: "Unit Of Measure",\n             type: {\n                dropdown: [\n                    {label: "pounds", value: "lbs"},\n                    {label: "ounces", value: "oz"},\n                    {label: "inches", value: "inch"},\n                ]\n            } \n        }},\n        warehouseSource: {\n            label: "Warehouse Source", type: {dropdown: this.getWarehouseOptions} \n        },\n        expirationDate: {label: "Expiration Date", type: "date"}\n    },\n    fieldsHeight: "25px"    \n} }'}]},deleting:{introduction:"Users can be allowed to delete data within the grid through a 'Delete' button. They can also be prompted to confirm their choice, if desired.",properties:[{name:"allowDeleting",description:"toggles whether to allow users to delete rows in the grid.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["onCommitChanges"],example:"allowDeleting = { false }"},{name:"onCommitChanges",description:"a function that passes in an object containing the changed row(s).",value:Object(x.jsxs)("div",{children:["a callback function that takes in a JSON object as a parameter, which contains a property ",Object(x.jsx)("code",{className:"property",children:"deleted"}),".",Object(x.jsx)("br",{}),Object(x.jsx)("br",{}),Object(x.jsx)("code",{className:"property",children:"deleted"})," is an array of indexes with respect to the",Object(x.jsx)("code",{className:"property",children:"rows"})," property that were selected for deletion."]}),requires:["allowDeleting","editConfig"],notes:Object(x.jsxs)("div",{children:["The example below shows how to locally update the",Object(x.jsx)("code",{className:"property",children:"rows"})," value to reflect it on to the table. Rather than changing it locally, it can be replaced with a different callback function that handles it in its own way (ex. making API call to update database, etc.)."]}),example:'onCommitChanges = {\n    //Note how the "deleted" property is filtered from the object passed in the parameter\n    ({deleted}) => {\n        const {rows} = this.state;\n        \n        //Re-creating the rows array (to prevent pass-by reference), and skipping deleted rows from being copied.\n        let newRows = [];\n        if (Array.isArray(rows) && rows.length > 0) {\n            for (let i = 0; i < rows.length; i++) {\n                if (!deleted.includes(i))\n                    newRows.push(rows[i]);\n            }\n        }\n        \n        //Setting the new version of rows with the deleted rows\n        this.setState({rows: newRows});\n    }    \n}'},{name:"showDeleteConfirmation",description:"toggles whether to show a popup to confirm that the user wants to delete the row.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowDeleting","onCommitChanges"],example:"showDeleteConfirmation = { true }"},{name:"deleteConfirmationMessage",description:"the warning message that the user will see after attempting to delete a row.",value:"a string",defaultValue:"Are you sure you want to delete this data?",requires:["allowDeleting","onCommitChanges","showDeleteConfirmation"],example:'showDeleteConfirmation = { true }\ndeleteConfirmationMessage = { "You are about to delete this item. Do you want to proceed?" }'}]},paging:{introduction:"If enabled, the bottom panel of the grid can present functionality to adjust the page size, as well as to view the next/prev pages of data. The GridComponent can either perform the paging feature locally, or remotely.",properties:[{name:"sectionDivider",title:"Local Paging",subtitle:Object(x.jsxs)("div",{children:["Setting ",Object(x.jsx)("code",{className:"property",children:"showPagingPanel"})," to",Object(x.jsx)("code",{className:"property",children:"true"})," is all that is required to support local paging."]})},{name:"showPagingPanel",description:"specifies whether the paging panel (page size, current/next/previous page) at the bottom of the grid is shown.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"true",notes:Object(x.jsxs)("div",{children:["Unless ",Object(x.jsx)("code",{className:"property",children:"remotePaging"})," is set to true, the GridComponent will perform paging internally using all of the data it is given in the",Object(x.jsx)("code",{className:"property",children:"rows"}),". For this feature to work accurately, all of the possible data should be provided to the ",Object(x.jsx)("code",{className:"property",children:"rows"})," property."]}),example:"showPagingPanel = { true }"},{name:"sectionDivider",title:"Remote Paging",subtitle:Object(x.jsxs)("div",{children:["To configure the grid for remote paging,",Object(x.jsx)("code",{className:"property",children:"showPagingPanel"})," and",Object(x.jsx)("code",{className:"property",children:"allowRemotePaging"})," needs to be set to",Object(x.jsx)("code",{className:"property",children:"true"}),", as well as filling-in the rest of the props as listed below."]})},{name:"allowRemotePaging",description:"toggles the grid to support remote paging.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["showPagingPanel","currentPage","changeCurrentPage","pageSize","changePageSize","totalCount"],example:"allowRemotePaging = { true }"},{name:"currentPage",description:"the current page index (starting from 0) that the user is currently in.",value:Object(x.jsxs)("div",{children:["a variable that holds the ",Object(x.jsx)("code",{className:"property",children:"currentPage"})," as provided by the ",Object(x.jsx)("code",{className:"property",children:"changeCurrentPage"})," property."]}),notes:Object(x.jsxs)("div",{children:["The variable should be initialized to ",Object(x.jsx)("code",{className:"property",children:"0"}),". In the example below, in the state object the ",Object(x.jsx)("code",{className:"property",children:"gridCurrentPage"})," is initialized as ",Object(x.jsx)("code",{className:"property",children:"gridCurrentPage = 0"})]}),requires:["showPagingPanel","changeCurrentPage","pageSize","changePageSize","totalCount"],example:"currentPage = { gridCurrentPage }"},{name:"changeCurrentPage",description:Object(x.jsxs)("div",{children:["a function that handles changing the value stored in the variable placed in the",Object(x.jsx)("code",{className:"property",children:"currentPage"})," prop."]}),value:Object(x.jsxs)("div",{children:["a callback function that takes in a parameter",Object(x.jsx)("code",{className:"property",children:"currentPage"})," and replaces the value stored in the variable set in the ",Object(x.jsx)("code",{className:"property",children:"currentPage"})," property."]}),requires:["showPagingPanel","currentPage","pageSize","changePageSize","totalCount"],example:"changeCurrentPage = {\n    (currentPage) => {\n        this.setState({gridCurrentPage: currentPage});\n    } \n}"},{name:"pageSize",description:"the current page size that the user has set.",value:Object(x.jsxs)("div",{children:["a variable that holds the ",Object(x.jsx)("code",{className:"property",children:"pageSize"})," as provided by the ",Object(x.jsx)("code",{className:"property",children:"changePageSize"})," property."]}),notes:Object(x.jsxs)("div",{children:["The variable should be initialized to ",Object(x.jsx)("code",{className:"property",children:"10"})," (if",Object(x.jsx)("code",{className:"property",children:"pageSizes"})," is unspecified), or to the first value in the array as specified in the ",Object(x.jsx)("code",{className:"property",children:"pageSizes"}),". In the example below, (assuming no ",Object(x.jsx)("code",{className:"property",children:"pageSizes"})," is configured) in the state object the ",Object(x.jsx)("code",{className:"property",children:"gridPageSize"})," is initialized as ",Object(x.jsx)("code",{className:"property",children:"gridPageSize = 10"})]}),requires:["showPagingPanel","currentPage","changeCurrentPage","changePageSize","totalCount"],example:"pageSize = { gridPageSize }"},{name:"changePageSize",description:Object(x.jsxs)("div",{children:["a function that handles changing the value stored in the variable placed in the",Object(x.jsx)("code",{className:"property",children:"pageSize"})," prop."]}),value:Object(x.jsxs)("div",{children:["a callback function that takes in a parameter",Object(x.jsx)("code",{className:"property",children:"pageSize"})," and replaces the value stored in the variable set in the ",Object(x.jsx)("code",{className:"property",children:"pageSize"})," property."]}),requires:["showPagingPanel","currentPage","changeCurrentPage","pageSize","totalCount"],example:"changePageSize = {\n    (pageSize) => {\n        this.setState({gridPageSize: pageSize});\n    } \n}"},{name:"totalCount",description:"the number of data in total that the grid will page through remotely. This is usedinternally to calculate how many pages total the grid would have to present as options to theuser.",value:"a numeric variable that holds the data size from remote that the grid will have to page through.",requires:["showPagingPanel","currentPage","changeCurrentPage","pageSize","changePageSize"]},{name:"sectionDivider",title:"Page Size Customization"},{name:"pageSizes",description:"configures the different page size options to present to the user.",value:"an array of numeric values",defaultValue:"[10, 50, 100]",example:"pageSizes = { [ 25, 50, 100, 500, 1000 ] }"}]},sorting:{introduction:"If enabled, the grid header columns can be interacted with to sort the data with respect to the asc/desc values of their toggled column. The GridComponent can either perform the sorting feature locally, or remotely.",properties:[{name:"sectionDivider",title:"Local Sorting",subtitle:Object(x.jsxs)("div",{children:["Setting ",Object(x.jsx)("code",{className:"property",children:"allowSorting"})," to",Object(x.jsx)("code",{className:"property",children:"true"})," is all that is required to support local sorting."]})},{name:"allowSorting",description:"toggles whether to allow the users to sort column values in asc/desc order.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",notes:Object(x.jsxs)("div",{children:["Unless ",Object(x.jsx)("code",{className:"property",children:"allowRemoteSorting"})," is set to true, the GridComponent will perform sorting internally using all of the data it is given in the",Object(x.jsx)("code",{className:"property",children:"rows"}),". For this feature to work accurately, all of the possible data should be provided to the ",Object(x.jsx)("code",{className:"property",children:"rows"})," property."]}),example:"allowSorting = { true }"},{name:"sectionDivider",title:"Remote Sorting",subtitle:Object(x.jsxs)("div",{children:["To configure the grid for remote sorting,",Object(x.jsx)("code",{className:"property",children:"allowSorting"})," and",Object(x.jsx)("code",{className:"property",children:"allowRemoteSorting"})," needs to be set to",Object(x.jsx)("code",{className:"property",children:"true"}),", as well as filling-in the rest of the props as listed below."]})},{name:"allowRemoteSorting",description:"toggles whether to allow users to sort columns remotely.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",requires:["allowSorting","sorting","changeSorting"],example:"allowRemoteSorting = { true }"},{name:"sorting",description:"the sorting that the user selected.",value:Object(x.jsxs)("div",{children:["a variable that holds the ",Object(x.jsx)("code",{className:"property",children:"sorting"})," as provided by the ",Object(x.jsx)("code",{className:"property",children:"changeSorting"})," property."]}),notes:Object(x.jsxs)("div",{children:["The variable should be initialized to empty array ",Object(x.jsx)("code",{className:"property",children:"[]"}),". In the example below, in the state object the ",Object(x.jsx)("code",{className:"property",children:"gridSorting"})," is initialized as ",Object(x.jsx)("code",{className:"property",children:"gridSorting = []"})]}),requires:["allowSorting","allowRemoteSorting","changeSorting"],example:"sorting = { gridSorting }"},{name:"changeSorting",description:Object(x.jsxs)("div",{children:["a function that handles changing the value stored in the variable placed in the",Object(x.jsx)("code",{className:"property",children:"sorting"})," prop."]}),value:Object(x.jsxs)("div",{children:["a callback function that takes in a parameter",Object(x.jsx)("code",{className:"property",children:"sorting"})," and replaces the value stored in the variable set in the ",Object(x.jsx)("code",{className:"property",children:"sorting"})," property."]}),requires:["allowSorting","allowRemoteSorting","sorting"],example:"changeSorting = {\n    (sorting) => {\n        this.setState({gridSorting: sorting});\n    } \n}"},{name:"sectionDivider",title:"Sorting Algorithm Customization For Columns"},{name:"columnsSorting",description:"configures how a specified column should sort its values.",value:Object(x.jsxs)("div",{children:["an array of JSON objects with the following properties:",Object(x.jsxs)("ul",{children:[Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"columnName"})," - the key/id of the column that corresponds to one of the ",Object(x.jsx)("code",{className:"property",children:"columns"}),' "name" prop.']}),Object(x.jsxs)("li",{children:[Object(x.jsx)("code",{className:"property",children:"compare"})," - a callback function that returns either",Object(x.jsx)("code",{className:"property",children:"-1"})," (less than),",Object(x.jsx)("code",{className:"property",children:"0"})," (equal), or",Object(x.jsx)("code",{className:"property",children:"1"})," (greater than)."]})]})]}),notes:Object(x.jsxs)("div",{children:["For date-typed columns, as long as the ",Object(x.jsx)("code",{className:"property",children:"type"})," is provided in the ",Object(x.jsx)("code",{className:"property",children:"columns"}),' property as "date", then the internal sorting will be done accurately. It uses the compare function as seen in below\'s example. See Required > columns prop from the menu on the left to learn how to do this.']}),example:'columnsSorting = { {\n    columnName: "Start Date",\n    compare: (a, b) => {\n            if ((a === null && b === null) || (a === undefined && b === undefined))\n                return 1;\n            else if (a === null || a === undefined)\n                return -1;\n            else if (b === null || b === undefined)\n                return 1;\n            else {\n                const dateA = Date.parse(a);\n                const dateB = Date.parse(b);\n        \n                if (dateA === dateB)\n                    return 0;\n                return (dateA < dateB) ? -1 : 1;\n            }\n    }\n} }'}]},refreshing:{introduction:"A refresh button can be presented to the user to allow them to refresh the data in the grid.",properties:[{name:"allowRefreshing",description:"toggles the refresh button to render on the bottom panel of the grid.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",required:["refreshData"],example:"allowRefreshing = { true }"},{name:"refreshData",description:Object(x.jsx)("div",{children:'a function that handles the refreshing of the grid when the user clicks "Refresh"'}),value:Object(x.jsxs)("div",{children:["a callback function that should re-retrieve and pass the latest values to the",Object(x.jsx)("code",{className:"property",children:"rows"})," prop."]}),required:["allowRefreshing"],example:"allowRefreshing = { true }\nrefreshData = {\n    () => {\n        //This is an example of how the data gets re-retrieved through an API call\n        axios.get('/getProductList')\n             .then(response => {\n                const {data} = response;\n                \n                //Sets the latest database data to the rows variable, which then gets passed to the GridComponent. \n                if (data && Array.isArray(data))\n                    this.setState({rows: data});\n                else \n                    this.setState({rows: []});\n             });    \n    }\n}"}]},exporting:{introduction:"An export button can be presented to the user to allow them to export the data in the grid.",properties:[{name:"allowExporting",description:"toggles the export button to render on the bottom panel of the grid.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"false",required:["exportData"],example:"allowExporting = { true }"},{name:"exportData",description:"a function that handles exporting grid data when the user clicks 'Export'.",value:"a callback function",required:["allowExporting"],example:"allowExporting = { true }\nexportData = {\n    () => {\n        //This is an example of how the export blob data gets retrieved through an API call\n        axios.get('/exportProductList', {responseType: 'blob'})\n             .then(response => {\n                const {headers, data} = response;\n                const fileName = response.headers['content-disposition']\n                            .split(';')\n                            .find(n => n.includes('filename='))\n                            .replace('filename=', '')\n                            .trim()\n                            .replace(/\\\"/g, \"\");\n                \n                this.setState({\n                    showDownloadPrompt: true,\n                    fileObject: {data, fileName}\n                });\n             });    \n    }\n}"}]},totalCount:{introduction:"Users can be presented the total number of data at the bottom right of the grid, if desired.",properties:[{name:"showTotalCount",description:"toggles whether the 'Total: ' should be visible in the bottom panel of the grid.",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"true",example:"showTotalCount = { false }"}]},className:{introduction:"The grid can be given a class name for CSS-related customizations.",properties:[{name:"className",description:Object(x.jsxs)("div",{children:["The CSS class name to attach to the ",Object(x.jsx)("code",{className:"property",children:"div"})," of the GridComponent"]}),value:"a string",example:'className = { "searchGrid" }'}]},height:{introduction:"The grid can be given a maximum height to prevent the data from growing too tall, and show scroll bars if it exceeds the specified value.",properties:[{name:"maxGridHeight",description:"the maximum height the grid can expand to vertically.",value:"a string that is a CSS-support height value",example:'maxGridHeight = { "50vh" }'}]},width:{introduction:"The grid can be given a maximum width to prevent the data from growing too wide, and show scroll bars if it exceeds the specified value.",properties:[{name:"maxGridWidth",description:"the maximum width the grid can expand to horizontally.",value:"a string that is a CSS-support width value",example:'maxGridWidth = { "50vw" }'}]},buttonLabels:{introduction:"If either (or both) the 'Refresh' and 'Export' buttons are toggled on, their labels can be hidden to simply the view of the grid by just presenting symbols.",properties:[{name:"showButtonLabels",description:"toggles whether to show the labels for the 'Refresh' and 'Export' buttons",value:Object(x.jsxs)("div",{children:["boolean ",Object(x.jsx)("code",{className:"property",children:"true"})," or ",Object(x.jsx)("code",{className:"property",children:"false"})]}),defaultValue:"true",example:"showButtonLabels = { true }"}]}}},Z=function(e){Object(h.a)(s,e);var t=Object(j.a)(s);function s(e){var c,l;return Object(r.a)(this,s),(c=t.call(this,e)).copyToClipboard=function(e){c.textArea.select(),document.execCommand("copy"),e.target.focus(),c.setState({copySuccess:"Copied!"})},"true"===localStorage.getItem("isDarkMode")&&(l=!0),c.state={darkMode:l,copySuccess:""},c.handleSelection=c.handleSelection.bind(Object(d.a)(c)),c.copyToClipboard=c.copyToClipboard.bind(Object(d.a)(c)),c.setDarkModeToLocalStorage=c.setDarkModeToLocalStorage.bind(Object(d.a)(c)),c}return Object(o.a)(s,[{key:"componentDidMount",value:function(){m.a.highlightAll()}},{key:"handleSelection",value:function(e){this.setState({selection:e.target.id})}},{key:"setDarkModeToLocalStorage",value:function(){var e=this.state.darkMode;localStorage.setItem("isDarkMode",!0===e?"true":"false")}},{key:"render",value:function(){var e,t=this,s=this.state,c=s.selection,l=s.darkMode;switch(G.a.init(),c){case"form-fields-component":window.scrollTo(0,0),e=Object(x.jsx)(u,{});break;case"grid-component":window.scrollTo(0,0),e=Object(x.jsx)($,Object(i.a)({darkMode:l},X));break;case"loader-component":window.scrollTo(0,0),e=Object(x.jsx)(S,{});break;case"mask-component":window.scrollTo(0,0),e=Object(x.jsx)(v,{});break;case"popup-component":window.scrollTo(0,0),e=Object(x.jsx)(y,{});break;case"search-component":window.scrollTo(0,0),e=Object(x.jsx)(T,{});break;case"file-component":default:window.scrollTo(0,0),e=Object(x.jsx)($,Object(i.a)({darkMode:l},X))}var a={};return!0===l&&(a={backgroundColor:"#222222",color:"white"}),Object(x.jsxs)("div",{children:[Object(x.jsxs)(F.a,{sticky:"top",collapseOnSelect:!0,expand:"lg",bg:"dark",variant:"dark",children:[Object(x.jsxs)(F.a.Brand,{children:[Object(x.jsx)("img",{src:"logo.png",style:{marginRight:"5px"},alt:"react wiki logo"}),Object(x.jsx)("span",{style:{verticalAlign:"text-bottom"},children:"React Wiki"})]}),Object(x.jsx)(F.a.Toggle,{"aria-controls":"basic-navbar-nav"}),Object(x.jsxs)(F.a.Collapse,{id:"basic-navbar-nav",children:[Object(x.jsxs)(P.a,{className:"mr-auto",children:[Object(x.jsxs)(R.a,{id:"nav-dropdown",title:"Components",children:[Object(x.jsx)(R.a.Item,{id:"file-component",onClick:this.handleSelection,children:" File Upload Component "}),Object(x.jsx)(R.a.Item,{id:"form-fields-component",onClick:this.handleSelection,children:" Form Fields Component "}),Object(x.jsx)(R.a.Item,{id:"grid-component",onClick:this.handleSelection,children:" Grid Component "}),Object(x.jsx)(R.a.Item,{id:"loader-component",onClick:this.handleSelection,children:" Loader Component "}),Object(x.jsx)(R.a.Item,{id:"mask-component",onClick:this.handleSelection,children:" Mask Component "}),Object(x.jsx)(R.a.Item,{id:"popup-component",onClick:this.handleSelection,children:" Popup Component "}),Object(x.jsx)(R.a.Item,{id:"search-component",onClick:this.handleSelection,children:" Search Form Component "})]}),Object(x.jsx)(P.a.Link,{href:"https://www.npmjs.com/package/reactwiki-components",children:" Get Package "})]}),Object(x.jsxs)("div",{style:{padding:".5rem 1rem"},children:[Object(x.jsx)("span",{className:"darkModeLabel",children:" Dark Mode: \xa0"}),Object(x.jsx)(z.a,{checkedChildren:Object(x.jsx)(V.a,{name:"moon"}),unCheckedChildren:Object(x.jsx)(V.a,{name:"sun",inverted:!0}),checked:l,onChange:function(){return t.setState({darkMode:!l},t.setDarkModeToLocalStorage)}})]}),Object(x.jsx)("div",{style:{padding:".5rem 1rem .5rem 0"},children:Object(x.jsxs)("a",{href:"https://github.com/lord-mendoza/reactWiki-components",style:{color:"white"},children:[" ",Object(x.jsx)(V.a,{name:"github",size:"large"})," "]})})]})]}),Object(x.jsx)("div",{style:Object(i.a)({paddingBottom:"15px"},a),className:!0===l?"darkMode":"",children:e}),Object(x.jsx)("div",{style:{paddingBottom:"10px",backgroundColor:"#343a40",paddingTop:"10px",marginTop:"-15px"},children:Object(x.jsxs)("h4",{style:{color:"white",textAlign:"center"},children:["Developed by ",Object(x.jsx)("a",{href:"https://lordmendoza.com/",children:"Lord Mendoza"})]})})]})}}]),s}(c.Component);var ee=function(){return Object(x.jsx)("div",{className:"App",children:Object(x.jsx)(Z,{})})};Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s(171),s(172),s(173);n.a.render(Object(x.jsx)(ee,{}),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))},55:function(e,t,s){}},[[174,1,2]]]);
//# sourceMappingURL=main.81cdafa1.chunk.js.map